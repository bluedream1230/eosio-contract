{"version":3,"sources":["webpack:///./src/pages/404.js"],"names":["rootPath","data","site","pathPrefix","siteMetadata","listOfRootPaths","sitemap","siteIsCollection","isCollection","nodes","allMarkdownRemark","siteIsTagged","filter","map","key","nonRootPath","path","backupPath","backupSite","redirectVersion","redirect","redirectVersionData","tagged","window","tagsDropdown","tag","location","pathname","includes","version","paths","result","sitedata","getCorrectPathKey","reverse","defaultNode","node","fields","slug","searchDataNode","rootDataNode","contentTitle","headTagTitle","isTagged","orgName","organization","pathKey","originalKey","pathData","repoName","repository","showSearch","tagsList","latestDDVersion","importedSummary","hasPrimaryNavigation","primaryNavData","currentVersion","currentDDVersion","summaryJson","pathInfo","JSON","parse","summary","mainNavData","hidesVersion","title","slugs","className","to"],"mappings":"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","file":"component---src-pages-404-js-534d2b6d6bbfca8263fa.js","sourcesContent":["import \"../page-templates/ContentPage.scss\";\n\nimport React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\n\nimport FullTemplate from 'src/templates/FullTemplate';\nimport GtmDataLayer from 'src/components/GtmDataLayer';\n\nconst getCorrectPathKey = (paths, sitemap) => {\n  let result = paths.filter(path => window.location.pathname.includes(path))[0];\n  let sitedata = sitemap.filter(map => map.key === result)[0];\n  let redirectVersionData = (sitedata.tagged) ? \n    sitedata.tagsDropdown.filter(tag => window.location.pathname.includes(tag.version))[0] : \"\";\n  let redirectVersion = (redirectVersionData) ? redirectVersionData.version : \"latest\";\n  let returnStmt = (!sitedata.tagged) ? result : (result !== '/') ? result+\"/\"+redirectVersion : \"/\"+redirectVersion;\n\n  return returnStmt;\n}\n\nexport default () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        pathPrefix\n        siteMetadata {\n          isCollection\n          sitemap {\n            key,\n            tagged,\n            tagsDropdown {\n              version\n            }\n          }\n          listOfRootPaths\n        }\n      }\n      allMarkdownRemark {\n        nodes {\n          fields {\n            articleTitle\n            contentTitle\n            currentDDVersion\n            currentVersion\n            hasPrimaryNavigation\n            headTagTitle\n            importedSummary\n            internalSummary\n            isCollection\n            isRoot\n            isTagged\n            latestDDVersion\n            organization\n            originalKey\n            pathData\n            pathPrefixInternal\n            primaryNavData\n            repository\n            showSearch\n            slug\n            summaryJson\n            tagsList\n          }\n        }\n      }\n    }\n  `);\n  const { \n    site: { pathPrefix, siteMetadata: { listOfRootPaths, sitemap, isCollection: siteIsCollection } },\n    allMarkdownRemark: { nodes }\n  } = data;\n  let siteIsTagged = sitemap.filter(map => map.key === listOfRootPaths[0])[0];\n  let nonRootPath = listOfRootPaths.filter(path => path !== \"/\")[0];\n  let backupPath = (nonRootPath) ? nonRootPath : \"/\";\n  let backupSite = sitemap.filter(map => map.key === backupPath)[0];\n  let redirectVersion = \"latest\";\n  let rootPath = \"/\";\n  let redirect = \"/\";\n  let redirectVersionData = (siteIsTagged.tagged && typeof window !== 'undefined') ? \n    siteIsTagged.tagsDropdown.filter(tag => window.location.pathname.includes(tag.version))[0] : \"latest\";\n\n  if (redirectVersionData) \n    redirectVersion = redirectVersionData.version;\n\n  rootPath = (siteIsTagged.tagged) ? \"/\"+redirectVersion+\"/index\" : \"/\"\n  redirect = (typeof window === 'undefined') ? rootPath : getCorrectPathKey(listOfRootPaths.reverse(), sitemap); \n\n  let defaultNode = (siteIsTagged.tagged) ? \n    nodes.filter(node => node.fields.slug === \"/latest/index\")[0]\n  : nodes.filter(node => node.fields.slug === \"/\")[0];\n  let searchDataNode = nodes.filter(node => node.fields.slug === redirect+\"/index\")[0];\n  let rootDataNode = (searchDataNode) ? searchDataNode : nodes.filter(node => node.fields.slug === rootPath)[0];\n\n  if (siteIsCollection && !rootDataNode) {\n    rootDataNode = (backupSite.tagged) ?\n      nodes.filter(node => node.fields.slug === backupPath+\"/latest/index\")[0]\n    : nodes.filter(node => node.fields.slug === backupPath+\"/index\")[0];\n    redirect = (backupSite.tagged) ? backupPath+\"/latest/index\" : backupPath;\n  }\n\n  if (!rootDataNode && !siteIsCollection) {\n    rootDataNode = defaultNode;\n  }\n  \n  const {\n    fields: {\n      contentTitle,\n      headTagTitle,\n      isCollection,\n      isTagged,\n      organization: orgName,\n      originalKey: pathKey,\n      pathData,\n      repository: repoName,\n      showSearch,\n      tagsList,\n      latestDDVersion,\n      importedSummary,\n      hasPrimaryNavigation,\n      primaryNavData,\n      currentVersion,\n      currentDDVersion,\n      summaryJson,\n    }\n  } = rootDataNode;\n\n  const hidesVersion = null;\n  const pathInfo = JSON.parse(pathData);\n  const summary = JSON.parse(summaryJson);\n  const mainNavData = (primaryNavData) ? JSON.parse(primaryNavData) : [{\"text\":\"NONE\",\"path\":\"EMPTY\"}];\n\n  return (\n    <FullTemplate\n      orgName={orgName}\n      repoName={repoName}\n      contentTitle={contentTitle}\n      currentVersion={currentVersion}\n      hidesVersion={hidesVersion}\n      showSearch={showSearch}\n      isTagged={isTagged}\n      title={headTagTitle}\n      summary={summary}\n      pathData={pathInfo}\n      slugs={nodes}\n      currentDDVersion={currentDDVersion}\n      latestDDVersion={latestDDVersion}\n      isCollection={isCollection}\n      hasPrimaryNavigation={hasPrimaryNavigation}\n      primaryNavData={mainNavData}\n      tagsList={tagsList}\n      importedSummary={importedSummary}\n      pathKey={pathKey}\n      pathPrefix={pathPrefix}\n    >\n      <GtmDataLayer\n        orgName={orgName}\n        repoName={repoName}\n        currentVersion={currentVersion}\n        hidesVersion={hidesVersion}\n        />\n      <article className=\"ContentPage document-page-container\">\n        <section>\n          <div className=\"document-page-content\">\n            <h1>404: Page not Found</h1>\n            <p>\n              We were unable to find the page you were looking for. Here are some things you can try:\n            </p>\n            <ul>\n              <li>Return to the <Link to={redirect}>homepage</Link></li>\n              <li>Use the search bar</li>\n            </ul>\n          </div>\n        </section>\n      </article>\n    </FullTemplate>\n  );\n}\n"],"sourceRoot":""}