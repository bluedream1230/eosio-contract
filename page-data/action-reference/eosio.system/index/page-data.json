{"componentChunkName":"component---src-page-templates-content-page-jsx","path":"/action-reference/eosio.system/index","webpackCompilationHash":"57edcde2ab626f3e1afc","result":{"data":{"site":{"pathPrefix":""},"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/build-and-deploy"}},{"fields":{"slug":"/guides/how-to-buy-ram"}},{"fields":{"slug":"/guides/how-to-stake"}},{"fields":{"slug":"/guides/how-to-create-issue-and-transfer-a-token"}},{"fields":{"slug":"/guides/how-to-sign-a-multisig-transaction-with-eosio.msig"}},{"fields":{"slug":"/guides/how-to-vote"}},{"fields":{"slug":"/action-reference/eosio.msig/index"}},{"fields":{"slug":"/action-reference/eosio.system/exchange_state"}},{"fields":{"slug":"/action-reference/eosio.system/rex.results"}},{"fields":{"slug":"/action-reference/eosio.bios/index"}},{"fields":{"slug":"/action-reference/eosio.system/native"}},{"fields":{"slug":"/action-reference/eosio.token/index"}},{"fields":{"slug":"/action-reference/eosio.wrap/index"}},{"fields":{"slug":"/guides/upgrading-the-eosio.system-contract"}},{"fields":{"slug":"/"}},{"fields":{"slug":"/action-reference/eosio.system/index"}},{"fields":{"slug":"/guides/how-to-use-eosio.wrap"}}]},"markdownRemark":{"html":"<h2 id=\"\"></h2>\n<p>eosio.system contract defines the structures and actions needed for blockchain's core functionality. </p>\n<ul>\n<li>Users can stake tokens for CPU and Network bandwidth, and then vote for producers or\ndelegate their vote to a proxy. </li>\n<li>Producers register in order to be voted for, and can claim per-block and per-vote rewards. </li>\n<li>Users can buy and sell RAM at a market-determined price. </li>\n<li>Users can bid on premium names. </li>\n<li>A resource exchange system (REX) allows token holders to lend their tokens,\nand users to rent CPU and Network resources in return for a market-determined fee. </li>\n</ul>\n<h2 id=\"system\">system</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">class</code></p>\n<p>The EOSIO system contract. The EOSIO system contract governs ram market, voters, producers, global state. </p>\n<h2 id=\"init\">init</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>The Init action initializes the system contract for a version and a symbol.\nOnly succeeds when: </p>\n<ul>\n<li>version is 0 and </li>\n<li>symbol is found and </li>\n<li>system token supply is greater than 0, </li>\n<li>and system contract wasn’t already been initialized. </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>version</td>\n<td>- the version, has to be 0,</td>\n</tr>\n<tr>\n<td>core</td>\n<td>- the system symbol.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"onblock\">onblock</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>On block action. This special action is triggered when a block is applied by the given producer\nand cannot be generated from any other source. It is used to pay producers and calculate\nmissed blocks of other producers. Producer pay is deposited into the producer's stake\nbalance and can be withdrawn over time. If blocknum is the start of a new round this may\nupdate the active producer config from the producer votes. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>header</td>\n<td>- the block header produced.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"setalimits\">setalimits</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Set account limits action sets the resource limits of an account </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>account</td>\n<td>- name of the account whose resource limit to be set,</td>\n</tr>\n<tr>\n<td>ram_bytes</td>\n<td>- ram limit in absolute bytes,</td>\n</tr>\n<tr>\n<td>net_weight</td>\n<td>- fractionally proportionate net limit of available resources based on (weight / total_weight_of_all_accounts),</td>\n</tr>\n<tr>\n<td>cpu_weight</td>\n<td>- fractionally proportionate cpu limit of available resources based on (weight / total_weight_of_all_accounts).</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"setacctram\">setacctram</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Set account RAM limits action, which sets the RAM limits of an account </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>account</td>\n<td>- name of the account whose resource limit to be set,</td>\n</tr>\n<tr>\n<td>ram_bytes</td>\n<td>- ram limit in absolute bytes.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"setacctnet\">setacctnet</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Set account NET limits action, which sets the NET limits of an account </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>account</td>\n<td>- name of the account whose resource limit to be set,</td>\n</tr>\n<tr>\n<td>net_weight</td>\n<td>- fractionally proportionate net limit of available resources based on (weight / total_weight_of_all_accounts).</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"setacctcpu\">setacctcpu</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Set account CPU limits action, which sets the CPU limits of an account </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>account</td>\n<td>- name of the account whose resource limit to be set,</td>\n</tr>\n<tr>\n<td>cpu_weight</td>\n<td>- fractionally proportionate cpu limit of available resources based on (weight / total_weight_of_all_accounts).</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"activate\">activate</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Activates a protocol feature </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>feature_digest</td>\n<td>- hash of the protocol feature to activate.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"delegatebw\">delegatebw</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Delegate bandwidth and/or cpu action. Stakes SYS from the balance of <code class=\"language-text\">from</code> for the benefit of <code class=\"language-text\">receiver</code>. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>from</td>\n<td>- the account to delegate bandwidth from, that is, the account holding tokens to be staked,</td>\n</tr>\n<tr>\n<td>receiver</td>\n<td>- the account to delegate bandwith to, that is, the account to whose resources staked tokens are added</td>\n</tr>\n<tr>\n<td>stake_net_quantity</td>\n<td>- tokens staked for NET bandwidth,</td>\n</tr>\n<tr>\n<td>stake_cpu_quantity</td>\n<td>- tokens staked for CPU bandwidth,</td>\n</tr>\n<tr>\n<td>transfer</td>\n<td>- if true, ownership of staked tokens is transfered to <code class=\"language-text\">receiver</code>.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"setrex\">setrex</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Setrex action. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>balance</td>\n<td>- amount to set the REX pool balance.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"deposit\">deposit</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Deposit to REX fund action. Deposits core tokens to user REX fund.\nAll proceeds and expenses related to REX are added to or taken out of this fund.\nAn inline transfer from 'owner' liquid balance is executed.\nAll REX-related costs and proceeds are deducted from and added to 'owner' REX fund,\nwith one exception being buying REX using staked tokens.\nStorage change is billed to 'owner'. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>owner</td>\n<td>- REX fund owner account,</td>\n</tr>\n<tr>\n<td>amount</td>\n<td>- amount of tokens to be deposited.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"withdraw\">withdraw</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Withdraw from REX fund action. </p>\n<p>An inline token transfer to user balance is executed. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>owner</td>\n<td>- REX fund owner account,</td>\n</tr>\n<tr>\n<td>amount</td>\n<td>- amount of tokens to be withdrawn.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"buyrex\">buyrex</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Buyrex action. Buys REX in exchange for tokens taken out of user's REX fund by transfering\ncore tokens from user REX fund and converts them to REX stake. By buying REX, user is\nlending tokens in order to be rented as CPU or NET resourses.\nStorage change is billed to 'from' account. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>from</td>\n<td>- owner account name,</td>\n</tr>\n<tr>\n<td>amount</td>\n<td>- amount of tokens taken out of 'from' REX fund.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"unstaketorex\">unstaketorex</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Unstaketorex action. Use staked core tokens to buy REX.\nStorage change is billed to 'owner' account. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>owner</td>\n<td>- owner of staked tokens,</td>\n</tr>\n<tr>\n<td>receiver</td>\n<td>- account name that tokens have previously been staked to,</td>\n</tr>\n<tr>\n<td>from_net</td>\n<td>- amount of tokens to be unstaked from NET bandwidth and used for REX purchase,</td>\n</tr>\n<tr>\n<td>from_cpu</td>\n<td>- amount of tokens to be unstaked from CPU bandwidth and used for REX purchase.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"sellrex\">sellrex</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Sellrex action. Sells REX in exchange for core tokens by converting REX stake back into core tokens\nat current exchange rate. If order cannot be processed, it gets queued until there is enough\nin REX pool to fill order, and will be processed within 30 days at most. If successful, user\nvotes are updated, that is, proceeds are deducted from user's voting power. In case sell order\nis queued, storage change is billed to 'from' account. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>from</td>\n<td>- owner account of REX,</td>\n</tr>\n<tr>\n<td>rex</td>\n<td>- amount of REX to be sold.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"cnclrexorder\">cnclrexorder</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Cnclrexorder action. Cancels unfilled REX sell order by owner if one exists. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>owner</td>\n<td>- owner account name.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"rentcpu\">rentcpu</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Rentcpu action. Use payment to rent as many SYS tokens as possible as determined by market price and\nstake them for CPU for the benefit of receiver, after 30 days the rented core delegation of CPU\nwill expire. At expiration, if balance is greater than or equal to <code class=\"language-text\">loan_payment</code>, <code class=\"language-text\">loan_payment</code>\nis taken out of loan balance and used to renew the loan. Otherwise, the loan is closed and user\nis refunded any remaining balance.\nOwner can fund or refund a loan at any time before its expiration.\nAll loan expenses and refunds come out of or are added to owner's REX fund. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>from</td>\n<td>- account creating and paying for CPU loan, 'from' account can add tokens to loan balance using action <code class=\"language-text\">fundcpuloan</code> and withdraw from loan balance using <code class=\"language-text\">defcpuloan</code></td>\n</tr>\n<tr>\n<td>receiver</td>\n<td>- account receiving rented CPU resources,</td>\n</tr>\n<tr>\n<td>loan_payment</td>\n<td>- tokens paid for the loan, it has to be greater than zero, amount of rented resources is calculated from <code class=\"language-text\">loan_payment</code>,</td>\n</tr>\n<tr>\n<td>loan_fund</td>\n<td>- additional tokens can be zero, and is added to loan balance. Loan balance represents a reserve that is used at expiration for automatic loan renewal.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"rentnet\">rentnet</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Rentnet action. Use payment to rent as many SYS tokens as possible as determined by market price and\nstake them for NET for the benefit of receiver, after 30 days the rented core delegation of NET\nwill expire. At expiration, if balance is greater than or equal to <code class=\"language-text\">loan_payment</code>, <code class=\"language-text\">loan_payment</code>\nis taken out of loan balance and used to renew the loan. Otherwise, the loan is closed and user\nis refunded any remaining balance.\nOwner can fund or refund a loan at any time before its expiration.\nAll loan expenses and refunds come out of or are added to owner's REX fund. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>from</td>\n<td>- account creating and paying for NET loan, 'from' account can add tokens to loan balance using action <code class=\"language-text\">fundnetloan</code> and withdraw from loan balance using <code class=\"language-text\">defnetloan</code>,</td>\n</tr>\n<tr>\n<td>receiver</td>\n<td>- account receiving rented NET resources,</td>\n</tr>\n<tr>\n<td>loan_payment</td>\n<td>- tokens paid for the loan, it has to be greater than zero, amount of rented resources is calculated from <code class=\"language-text\">loan_payment</code>,</td>\n</tr>\n<tr>\n<td>loan_fund</td>\n<td>- additional tokens can be zero, and is added to loan balance. Loan balance represents a reserve that is used at expiration for automatic loan renewal.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"fundcpuloan\">fundcpuloan</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Fundcpuloan action. Transfers tokens from REX fund to the fund of a specific CPU loan in order to\nbe used for loan renewal at expiry. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>from</td>\n<td>- loan creator account,</td>\n</tr>\n<tr>\n<td>loan_num</td>\n<td>- loan id,</td>\n</tr>\n<tr>\n<td>payment</td>\n<td>- tokens transfered from REX fund to loan fund.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"fundnetloan\">fundnetloan</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Fundnetloan action. Transfers tokens from REX fund to the fund of a specific NET loan in order to\nbe used for loan renewal at expiry. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>from</td>\n<td>- loan creator account,</td>\n</tr>\n<tr>\n<td>loan_num</td>\n<td>- loan id,</td>\n</tr>\n<tr>\n<td>payment</td>\n<td>- tokens transfered from REX fund to loan fund.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"defcpuloan\">defcpuloan</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Defcpuloan action. Withdraws tokens from the fund of a specific CPU loan and adds them to REX fund. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>from</td>\n<td>- loan creator account,</td>\n</tr>\n<tr>\n<td>loan_num</td>\n<td>- loan id,</td>\n</tr>\n<tr>\n<td>amount</td>\n<td>- tokens transfered from CPU loan fund to REX fund.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"defnetloan\">defnetloan</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Defnetloan action. Withdraws tokens from the fund of a specific NET loan and adds them to REX fund. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>from</td>\n<td>- loan creator account,</td>\n</tr>\n<tr>\n<td>loan_num</td>\n<td>- loan id,</td>\n</tr>\n<tr>\n<td>amount</td>\n<td>- tokens transfered from NET loan fund to REX fund.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"updaterex\">updaterex</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Updaterex action. Updates REX owner vote weight to current value of held REX tokens. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>owner</td>\n<td>- REX owner account.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"rexexec\">rexexec</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Rexexec action. Processes max CPU loans, max NET loans, and max queued sellrex orders.\nAction does not execute anything related to a specific user. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>user</td>\n<td>- any account can execute this action,</td>\n</tr>\n<tr>\n<td>max</td>\n<td>- number of each of CPU loans, NET loans, and sell orders to be processed.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"consolidate\">consolidate</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Consolidate action. Consolidates REX maturity buckets into one bucket that can be sold after 4 days\nstarting from the end of the day. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>owner</td>\n<td>- REX owner account name.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"mvtosavings\">mvtosavings</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Mvtosavings action. Moves a specified amount of REX into savings bucket. REX savings bucket\nnever matures. In order for it to be sold, it has to be moved explicitly\nout of that bucket. Then the moved amount will have the regular maturity\nperiod of 4 days starting from the end of the day. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>owner</td>\n<td>- REX owner account name.</td>\n</tr>\n<tr>\n<td>rex</td>\n<td>- amount of REX to be moved.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"mvfrsavings\">mvfrsavings</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Mvfrsavings action. Moves a specified amount of REX out of savings bucket. The moved amount\nwill have the regular REX maturity period of 4 days. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>owner</td>\n<td>- REX owner account name.</td>\n</tr>\n<tr>\n<td>rex</td>\n<td>- amount of REX to be moved.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"closerex\">closerex</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Closerex action. Deletes owner records from REX tables and frees used RAM. Owner must not have\nan outstanding REX balance. </p>\n<p>owner REX balance entry is deleted.\nREX fund entry is deleted. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>owner</td>\n<td>- user account name.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"undelegatebw\">undelegatebw</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Undelegate bandwitdh action. Decreases the total tokens delegated by <code class=\"language-text\">from</code> to <code class=\"language-text\">receiver</code> and/or\nfrees the memory associated with the delegation if there is nothing\nleft to delegate.\nThis will cause an immediate reduction in net/cpu bandwidth of the\nreceiver.\nA transaction is scheduled to send the tokens back to <code class=\"language-text\">from</code> after\nthe staking period has passed. If existing transaction is scheduled, it\nwill be canceled and a new transaction issued that has the combined\nundelegated amount.\nThe <code class=\"language-text\">from</code> account loses voting power as a result of this call and\nall producer tallies are updated. </p>\n<p>deferred transaction with a delay of 3 days.\naction, pending action is canceled and timer is reset. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>from</td>\n<td>- the account to undelegate bandwidth from, that is, the account whose tokens will be unstaked,</td>\n</tr>\n<tr>\n<td>receiver</td>\n<td>- the account to undelegate bandwith to, that is, the account to whose benefit tokens have been staked,</td>\n</tr>\n<tr>\n<td>unstake_net_quantity</td>\n<td>- tokens to be unstaked from NET bandwidth,</td>\n</tr>\n<tr>\n<td>unstake_cpu_quantity</td>\n<td>- tokens to be unstaked from CPU bandwidth,</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"buyram\">buyram</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Buy ram action. Increases receiver's ram quota based upon current price and quantity of\ntokens provided. An inline transfer from receiver to system contract of\ntokens will be executed. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>payer</td>\n<td>- the ram buyer,</td>\n</tr>\n<tr>\n<td>receiver</td>\n<td>- the ram receiver,</td>\n</tr>\n<tr>\n<td>quant</td>\n<td>- the quntity of tokens to buy ram with.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"buyrambytes\">buyrambytes</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Buy a specific amount of ram bytes action. Increases receiver's ram in quantity of bytes provided.\nAn inline transfer from receiver to system contract of tokens will be executed. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>payer</td>\n<td>- the ram buyer,</td>\n</tr>\n<tr>\n<td>receiver</td>\n<td>- the ram receiver,</td>\n</tr>\n<tr>\n<td>bytes</td>\n<td>- the quntity of ram to buy specified in bytes.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"sellram\">sellram</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Sell ram action. Reduces quota by bytes and then performs an inline transfer of tokens\nto receiver based upon the average purchase price of the original quota. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>account</td>\n<td>- the ram seller account,</td>\n</tr>\n<tr>\n<td>bytes</td>\n<td>- the amount of ram to sell in bytes.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"refund\">refund</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Refund action. This action is called after the delegation-period to claim all pending\nunstaked tokens belonging to owner. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>owner</td>\n<td>- the owner of the tokens claimed.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"regproducer\">regproducer</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Register producer action. Register producer action, indicates that a particular account wishes to become a producer,\nthis action will create a <code class=\"language-text\">producer_config</code> and a <code class=\"language-text\">producer_info</code> object for <code class=\"language-text\">producer</code> scope\nin producers tables. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>producer</td>\n<td>- account registering to be a producer candidate,</td>\n</tr>\n<tr>\n<td>producer_key</td>\n<td>- the public key of the block producer, this is the key used by block producer to sign blocks,</td>\n</tr>\n<tr>\n<td>url</td>\n<td>- the url of the block producer, normally the url of the block producer presentation website,</td>\n</tr>\n<tr>\n<td>location</td>\n<td>- is the country code as defined in the ISO 3166, <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes</a></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"unregprod\">unregprod</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Unregister producer action. Deactivate the block producer with account name <code class=\"language-text\">producer</code>. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>producer</td>\n<td>- the block producer account to unregister.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"setram\">setram</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Set ram action sets the ram supply </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>max_ram_size</td>\n<td>- the amount of ram supply to set.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"setramrate\">setramrate</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Set ram rate action. Sets the rate of increase of RAM in bytes per block. It is capped by the uint16_t to\na maximum rate of 3 TB per year. If update_ram_supply hasn't been called for the most recent block,\nthen new ram will be allocated at the old rate up to the present block before switching the rate. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>bytes_per_block</td>\n<td>- the amount of bytes per block increase to set.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"voteproducer\">voteproducer</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Vote producer action. Votes for a set of producers. This action updates the list of <code class=\"language-text\">producers</code> voted for,\nfor <code class=\"language-text\">voter</code> account. If voting for a <code class=\"language-text\">proxy</code>, the producer votes will not change until the\nproxy updates their own vote. Voter can vote for a proxy <strong>or</strong> a list of at most 30 producers.\nStorage change is billed to <code class=\"language-text\">voter</code>. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>voter</td>\n<td>- the account to change the voted producers for,</td>\n</tr>\n<tr>\n<td>proxy</td>\n<td>- the proxy to change the voted producers for,</td>\n</tr>\n<tr>\n<td>producers</td>\n<td>- the list of producers to vote for, a maximum of 30 producers is allowed.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"regproxy\">regproxy</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Register proxy action. Set <code class=\"language-text\">proxy</code> account as proxy.\nAn account marked as a proxy can vote with the weight of other accounts which\nhave selected it as a proxy. Other accounts must refresh their voteproducer to\nupdate the proxy's weight.\nStorage change is billed to <code class=\"language-text\">proxy</code>. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>rpoxy</td>\n<td>- the account registering as voter proxy (or unregistering),</td>\n</tr>\n<tr>\n<td>isproxy</td>\n<td>- if true, proxy is registered; if false, proxy is unregistered.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"setparams\">setparams</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Set the blockchain parameters Set the blockchain parameters. By tunning these parameters a degree of\ncustomization can be achieved. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>params</td>\n<td>- New blockchain parameters to set.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"claimrewards\">claimrewards</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Claim rewards action. Claim block producing and vote rewards. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>owner</td>\n<td>- producer account claiming per-block and per-vote rewards.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"setpriv\">setpriv</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Set privilege status for an account. Allows to set privilege status for an account (turn it on/off). </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>account</td>\n<td>- the account to set the privileged status for.</td>\n</tr>\n<tr>\n<td>is_priv</td>\n<td>- 0 for false, > 0 for true.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"rmvproducer\">rmvproducer</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Remove producer action. Deactivates a producer by name, if not found asserts. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>producer</td>\n<td>- the producer account to deactivate.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"updtrevision\">updtrevision</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Update revision action. Updates the current revision.\nthan or equal 1 (“set upper bound to greatest revision supported in the code”). </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>revision</td>\n<td>- it has to be incremented by 1 compared with current revision.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"bidname\">bidname</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Bid name action. Allows an account <code class=\"language-text\">bidder</code> to place a bid for a name <code class=\"language-text\">newname</code>. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>bidder</td>\n<td>- the account placing the bid,</td>\n</tr>\n<tr>\n<td>newname</td>\n<td>- the name the bid is placed for,</td>\n</tr>\n<tr>\n<td>bid</td>\n<td>- the amount of system tokens payed for the bid.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"bidrefund\">bidrefund</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Bid refund action. Allows the account <code class=\"language-text\">bidder</code> to get back the amount it bid so far on a <code class=\"language-text\">newname</code> name. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>bidder</td>\n<td>- the account that gets refunded,</td>\n</tr>\n<tr>\n<td>newname</td>\n<td>- the name for which the bid was placed and now it gets refunded for.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"setinflation\">setinflation</h2>\n<p><strong>Type:</strong> <code class=\"language-text\">void</code></p>\n<p>Change the annual inflation rate of the core token supply and specify how\nthe new issued tokens will be distributed based on the following structure. </p>\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>annual_rate</td>\n<td>- Annual inflation rate of the core token supply. (eg. For 5% Annual inflation => annual_rate=500 For 1.5% Annual inflation => annual_rate=150</td>\n</tr>\n<tr>\n<td>inflation_pay_factor</td>\n<td>- Inverse of the fraction of the inflation used to reward block producers. The remaining inflation will be sent to the <code class=\"language-text\">eosio.saving</code> account. (eg. For 20% of inflation going to block producer rewards => inflation_pay_factor = 50000 For 100% of inflation going to block producer rewards => inflation_pay_factor = 10000).</td>\n</tr>\n<tr>\n<td>votepay_factor</td>\n<td>- Inverse of the fraction of the block producer rewards to be distributed proportional to blocks produced. The remaining rewards will be distributed proportional to votes received. (eg. For 25% of block producer rewards going towards block pay => votepay_factor = 40000 For 75% of block producer rewards going towards block pay => votepay_factor = 13333).</td>\n</tr>\n</tbody>\n</table>","tableOfContents":"<ul>\n<li><a href=\"/action-reference/eosio.system/index/#system\">system</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#init\">init</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#onblock\">onblock</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#setalimits\">setalimits</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#setacctram\">setacctram</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#setacctnet\">setacctnet</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#setacctcpu\">setacctcpu</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#activate\">activate</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#delegatebw\">delegatebw</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#setrex\">setrex</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#deposit\">deposit</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#withdraw\">withdraw</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#buyrex\">buyrex</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#unstaketorex\">unstaketorex</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#sellrex\">sellrex</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#cnclrexorder\">cnclrexorder</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#rentcpu\">rentcpu</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#rentnet\">rentnet</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#fundcpuloan\">fundcpuloan</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#fundnetloan\">fundnetloan</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#defcpuloan\">defcpuloan</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#defnetloan\">defnetloan</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#updaterex\">updaterex</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#rexexec\">rexexec</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#consolidate\">consolidate</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#mvtosavings\">mvtosavings</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#mvfrsavings\">mvfrsavings</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#closerex\">closerex</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#undelegatebw\">undelegatebw</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#buyram\">buyram</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#buyrambytes\">buyrambytes</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#sellram\">sellram</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#refund\">refund</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#regproducer\">regproducer</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#unregprod\">unregprod</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#setram\">setram</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#setramrate\">setramrate</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#voteproducer\">voteproducer</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#regproxy\">regproxy</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#setparams\">setparams</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#claimrewards\">claimrewards</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#setpriv\">setpriv</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#rmvproducer\">rmvproducer</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#updtrevision\">updtrevision</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#bidname\">bidname</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#bidrefund\">bidrefund</a></li>\n<li><a href=\"/action-reference/eosio.system/index/#setinflation\">setinflation</a></li>\n</ul>","frontmatter":{"edit_link":null,"request_changes_link":null},"fields":{"articleTitle":"NULL","contentTitle":"Action-reference","headTagTitle":"action-referenceeosiosystem","internalSummary":"/usr/local/lib/python3.7/site-packages/thorka-0.1-py3.7.egg/src/lib/gatsby/data/SUMMARY.json","isCollection":false,"isRoot":true,"isTagged":false,"organization":"EOSIO","originalKey":"/","pathData":"{\"tagged\":false,\"parentPath\":\"action-reference/eosio.system\",\"collectionPath\":\"/\",\"rootDirPath\":\"action-reference\",\"filename\":\"index.md\"}","repository":"eosio.contracts","showSearch":true,"slug":"/action-reference/eosio.system/index","tagsList":"[{\"latest\":true,\"tag\":\"1.0.0\",\"tag_reduced\":\"1.0\",\"tag_sanitized\":\"1.0\",\"tag_reduced_friendly\":\"v1.0\",\"rc\":0,\"beta\":0,\"build\":0,\"deprecated\":false,\"version\":\"latest\",\"summaryPath\":\"/usr/local/lib/python3.7/site-packages/thorka-0.1-py3.7.egg/src/lib/gatsby/data/SUMMARY.json\",\"importedSummary\":\"N/A\"}]","latestDDVersion":"","importedSummary":"N/A","hasPrimaryNavigation":false,"primaryNavData":"[{\"text\":\"NONE\",\"path\":\"EMPTY\"}]","currentVersion":"latest","currentDDVersion":"","summaryJson":"{\"array\":[{\"title\":\"Build And Deploy\",\"link\":\"build-and-deploy.md\"},{\"sub\":[{\"title\":\"Upgrading The Eosio.system Contract\",\"link\":\"guides/upgrading-the-eosio.system-contract.md\"},{\"title\":\"How To Buy Ram\",\"link\":\"guides/how-to-buy-ram.md\"},{\"title\":\"How To Stake\",\"link\":\"guides/how-to-stake.md\"},{\"title\":\"How To Vote\",\"link\":\"guides/how-to-vote.md\"},{\"title\":\"How To Create Issue And Transfer A Token\",\"link\":\"guides/how-to-create-issue-and-transfer-a-token.md\"},{\"title\":\"How To Sign A Multisig Transaction With Eosio.msig\",\"link\":\"guides/how-to-sign-a-multisig-transaction-with-eosio.msig.md\"},{\"title\":\"How To Use Eosio.wrap\",\"link\":\"guides/how-to-use-eosio.wrap.md\"}],\"title\":\"Guides\"},{\"sub\":[{\"sub\":[],\"title\":\"eosio.bios\",\"link\":\"action-reference/eosio.bios\"},{\"sub\":[],\"title\":\"eosio.msig\",\"link\":\"action-reference/eosio.msig\"},{\"sub\":[{\"title\":\"exchange_state\",\"link\":\"action-reference/eosio.system/exchange_state.md\"},{\"title\":\"native\",\"link\":\"action-reference/eosio.system/native.md\"},{\"title\":\"rex.results\",\"link\":\"action-reference/eosio.system/rex.results.md\"}],\"title\":\"eosio.system\",\"link\":\"action-reference/eosio.system\"},{\"sub\":[],\"title\":\"eosio.token\",\"link\":\"action-reference/eosio.token\"},{\"sub\":[],\"title\":\"eosio.wrap\",\"link\":\"action-reference/eosio.wrap\"}],\"title\":\"Action Reference\"}],\"title\":[]}"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/action-reference/eosio.system/index"}}}