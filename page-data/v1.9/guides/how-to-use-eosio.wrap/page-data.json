{"componentChunkName":"component---src-page-templates-content-page-jsx","path":"/v1.9/guides/how-to-use-eosio.wrap","result":{"data":{"site":{"pathPrefix":"/eosio.contracts"},"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/latest/build-and-deploy"}},{"fields":{"slug":"/latest/index"}},{"fields":{"slug":"/v1.9/build-and-deploy"}},{"fields":{"slug":"/v1.9/index"}},{"fields":{"slug":"/latest/guides/how-to-buy-ram"}},{"fields":{"slug":"/latest/guides/how-to-sign-a-multisig-transaction-with-eosio.msig"}},{"fields":{"slug":"/latest/guides/how-to-create-issue-and-transfer-a-token"}},{"fields":{"slug":"/latest/guides/how-to-stake"}},{"fields":{"slug":"/latest/guides/index"}},{"fields":{"slug":"/latest/guides/upgrading-the-eosio.system-contract"}},{"fields":{"slug":"/latest/guides/how-to-vote"}},{"fields":{"slug":"/v1.9/guides/how-to-buy-ram"}},{"fields":{"slug":"/v1.9/guides/how-to-create-issue-and-transfer-a-token"}},{"fields":{"slug":"/v1.9/guides/how-to-sign-a-multisig-transaction-with-eosio.msig"}},{"fields":{"slug":"/v1.9/guides/how-to-stake"}},{"fields":{"slug":"/v1.9/guides/how-to-vote"}},{"fields":{"slug":"/v1.9/guides/index"}},{"fields":{"slug":"/v1.9/guides/upgrading-the-eosio.system-contract"}},{"fields":{"slug":"/latest/action-reference/eosio.bios/index"}},{"fields":{"slug":"/latest/action-reference/eosio.msig/index"}},{"fields":{"slug":"/latest/action-reference/eosio.system/exchange_state"}},{"fields":{"slug":"/latest/action-reference/eosio.system/index"}},{"fields":{"slug":"/latest/action-reference/eosio.system/rex.results"}},{"fields":{"slug":"/latest/action-reference/eosio.wrap/index"}},{"fields":{"slug":"/latest/action-reference/eosio.system/native"}},{"fields":{"slug":"/latest/action-reference/eosio.token/index"}},{"fields":{"slug":"/v1.9/action-reference/eosio.bios/index"}},{"fields":{"slug":"/v1.9/action-reference/eosio.msig/index"}},{"fields":{"slug":"/v1.9/action-reference/eosio.system/index"}},{"fields":{"slug":"/v1.9/action-reference/eosio.system/native"}},{"fields":{"slug":"/v1.9/action-reference/eosio.system/exchange_state"}},{"fields":{"slug":"/v1.9/action-reference/eosio.system/rex.results"}},{"fields":{"slug":"/v1.9/action-reference/eosio.wrap/index"}},{"fields":{"slug":"/v1.9/action-reference/eosio.token/index"}},{"fields":{"slug":"/latest/guides/how-to-use-eosio.wrap"}},{"fields":{"slug":"/v1.9/guides/how-to-use-eosio.wrap"}}]},"markdownRemark":{"html":"<h1 id=\"eosiowrap\"><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#eosiowrap\" aria-label=\"eosiowrap permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>eosio.wrap</h1>\n<h2 id=\"1-installing-the-eosiowrap-contract\"><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#1-installing-the-eosiowrap-contract\" aria-label=\"1 installing the eosiowrap contract permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Installing the eosio.wrap contract</h2>\n<p>The eosio.wrap contract needs to be installed on a privileged account to function. It is recommended to use the account <code class=\"language-text\">eosio.wrap</code>.</p>\n<p>First, the account <code class=\"language-text\">eosio.wrap</code> needs to be created. Since it has the restricted <code class=\"language-text\">eosio.</code> prefix, only a privileged account can create this account. So this guide will use the <code class=\"language-text\">eosio</code> account to create the <code class=\"language-text\">eosio.wrap</code> account. On typical live blockchain configurations, the <code class=\"language-text\">eosio</code> account can only be controlled by a supermajority of the current active block producers. So, this guide will use the <code class=\"language-text\">eosio.msig</code> contract to help coordinate the approvals of the proposed transaction that creates the <code class=\"language-text\">eosio.wrap</code> account.</p>\n<p>The <code class=\"language-text\">eosio.wrap</code> account also needs to have sufficient RAM to host the contract and sufficient CPU and network bandwidth to deploy the contract. This means that the creator of the account (<code class=\"language-text\">eosio</code>) needs to gift sufficient RAM to the new account and delegate (preferably with transfer) sufficient bandwidth to the new account. To pull this off the <code class=\"language-text\">eosio</code> account needs to have enough of the core system token (the <code class=\"language-text\">SYS</code> token will be used within this guide) in its liquid balance. So prior to continuing with the next steps of this guide, the active block producers of the chain who are coordinating this process need to ensure that a sufficient amount of core system tokens that they are authorized to spend is placed in the liquid balance of the <code class=\"language-text\">eosio</code> account.</p>\n<p>This guide will be using cleos to carry out the process.</p>\n<h3 id=\"11-create-the-eosiowrap-account\"><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#11-create-the-eosiowrap-account\" aria-label=\"11 create the eosiowrap account permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1 Create the eosio.wrap account</h3>\n<h4 id=\"111-generate-the-transaction-to-create-the-eosiowrap-account\"><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#111-generate-the-transaction-to-create-the-eosiowrap-account\" aria-label=\"111 generate the transaction to create the eosiowrap account permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1.1 Generate the transaction to create the eosio.wrap account</h4>\n<p>The transaction to create the <code class=\"language-text\">eosio.wrap</code> account will need to be proposed to get the necessary approvals from active block producers before executing it. This transaction needs to first be generated and stored as JSON into a file so that it can be used in the cleos command to propose the transaction to the eosio.msig contract.</p>\n<p>A simple way to generate a transaction to create a new account is to use the <code class=\"language-text\">cleos system newaccount</code>. However, that sub-command currently only accepts a single public key as the owner and active authority of the new account. However, the owner and active authorities of the new account should only be satisfied by the <code class=\"language-text\">active</code> permission of <code class=\"language-text\">eosio</code>. One option is to create the new account with the some newly generated key, and then later update the authorities of the new account using <code class=\"language-text\">cleos set account permission</code>. This guide will take an alternative approach which atomically creates the new account in its proper configuration.</p>\n<p>Three unsigned transactions will be generated using cleos and then the actions within those transactions will be appropriately stitched together into a single transaction which will later be proposed using the eosio.msig contract.</p>\n<p>First, generate a transaction to capture the necessary actions involved in creating a new account:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos system newaccount -s -j -d --transfer --stake-net &quot;1.000 SYS&quot; --stake-cpu &quot;1.000 SYS&quot; --buy-ram-kbytes 50 eosio eosio.wrap EOS8MMUW11TAdTDxqdSwSqJodefSoZbFhcprndomgLi9MeR2o8MT4 &gt; generated_account_creation_trx.json\n726964ms thread-0   main.cpp:429                  create_action        ] result: {&quot;binargs&quot;:&quot;0000000000ea305500004d1a03ea305500c80000&quot;} arg: {&quot;code&quot;:&quot;eosio&quot;,&quot;action&quot;:&quot;buyrambytes&quot;,&quot;args&quot;:{&quot;payer&quot;:&quot;eosio&quot;,&quot;receiver&quot;:&quot;eosio.wrap&quot;,&quot;bytes&quot;:51200}}\n726967ms thread-0   main.cpp:429                  create_action        ] result: {&quot;binargs&quot;:&quot;0000000000ea305500004d1a03ea3055102700000000000004535953000000001027000000000000045359530000000001&quot;} arg: {&quot;code&quot;:&quot;eosio&quot;,&quot;action&quot;:&quot;delegatebw&quot;,&quot;args&quot;:{&quot;from&quot;:&quot;eosio&quot;,&quot;receiver&quot;:&quot;eosio.wrap&quot;,&quot;stake_net_quantity&quot;:&quot;1.0000 SYS&quot;,&quot;stake_cpu_quantity&quot;:&quot;1.0000 SYS&quot;,&quot;transfer&quot;:true}}\n$ cat generated_account_creation_trx.json\n{\n  &quot;expiration&quot;: &quot;2018-06-29T17:11:36&quot;,\n  &quot;ref_block_num&quot;: 16349,\n  &quot;ref_block_prefix&quot;: 3248946195,\n  &quot;max_net_usage_words&quot;: 0,\n  &quot;max_cpu_usage_ms&quot;: 0,\n  &quot;delay_sec&quot;: 0,\n  &quot;context_free_actions&quot;: [],\n  &quot;actions&quot;: [{\n      &quot;account&quot;: &quot;eosio&quot;,\n      &quot;name&quot;: &quot;newaccount&quot;,\n      &quot;authorization&quot;: [{\n          &quot;actor&quot;: &quot;eosio&quot;,\n          &quot;permission&quot;: &quot;active&quot;\n        }\n      ],\n      &quot;data&quot;: &quot;0000000000ea305500004d1a03ea305501000000010003c8162ea04fed738bfd5470527fd1ae7454c2e9ad1acbadec9f9e35bab2f33c660100000001000000010003c8162ea04fed738bfd5470527fd1ae7454c2e9ad1acbadec9f9e35bab2f33c6601000000&quot;\n    },{\n      &quot;account&quot;: &quot;eosio&quot;,\n      &quot;name&quot;: &quot;buyrambytes&quot;,\n      &quot;authorization&quot;: [{\n          &quot;actor&quot;: &quot;eosio&quot;,\n          &quot;permission&quot;: &quot;active&quot;\n        }\n      ],\n      &quot;data&quot;: &quot;0000000000ea305500004d1a03ea305500c80000&quot;\n    },{\n      &quot;account&quot;: &quot;eosio&quot;,\n      &quot;name&quot;: &quot;delegatebw&quot;,\n      &quot;authorization&quot;: [{\n          &quot;actor&quot;: &quot;eosio&quot;,\n          &quot;permission&quot;: &quot;active&quot;\n        }\n      ],\n      &quot;data&quot;: &quot;0000000000ea305500004d1a03ea3055102700000000000004535953000000001027000000000000045359530000000001&quot;\n    }\n  ],\n  &quot;transaction_extensions&quot;: [],\n  &quot;signatures&quot;: [],\n  &quot;context_free_data&quot;: []\n}</code></pre></div>\n<p>Adjust the amount of delegated tokens and the amount of RAM bytes to gift as necessary.\nThe actual public key used is not important since that data is only encoded into the <code class=\"language-text\">eosio::newaccount</code> action which will be replaced soon anyway.</p>\n<p>Second, create a file (e.g. newaccount_payload.json) with the JSON payload for the real <code class=\"language-text\">eosio::newaccount</code> action. It should look like:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cat newaccount_payload.json\n{\n   &quot;creator&quot;: &quot;eosio&quot;,\n   &quot;name&quot;: &quot;eosio.wrap&quot;,\n   &quot;owner&quot;: {\n      &quot;threshold&quot;: 1,\n      &quot;keys&quot;: [],\n      &quot;accounts&quot;: [{\n         &quot;permission&quot;: {&quot;actor&quot;: &quot;eosio&quot;, &quot;permission&quot;: &quot;active&quot;},\n         &quot;weight&quot;: 1\n      }],\n      &quot;waits&quot;: []\n   },\n   &quot;active&quot;: {\n      &quot;threshold&quot;: 1,\n      &quot;keys&quot;: [],\n      &quot;accounts&quot;: [{\n         &quot;permission&quot;: {&quot;actor&quot;: &quot;eosio&quot;, &quot;permission&quot;: &quot;active&quot;},\n         &quot;weight&quot;: 1\n      }],\n      &quot;waits&quot;: []\n   }\n}</code></pre></div>\n<p>Third, generate a transaction containing the actual <code class=\"language-text\">eosio::newaccount</code> action that will be used in the final transaction:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos push action -s -j -d eosio newaccount newaccount_payload.json -p eosio &gt; generated_newaccount_trx.json\n$ cat generated_newaccount_trx.json\n{\n  &quot;expiration&quot;: &quot;2018-06-29T17:11:36&quot;,\n  &quot;ref_block_num&quot;: 16349,\n  &quot;ref_block_prefix&quot;: 3248946195,\n  &quot;max_net_usage_words&quot;: 0,\n  &quot;max_cpu_usage_ms&quot;: 0,\n  &quot;delay_sec&quot;: 0,\n  &quot;context_free_actions&quot;: [],\n  &quot;actions&quot;: [{\n      &quot;account&quot;: &quot;eosio&quot;,\n      &quot;name&quot;: &quot;newaccount&quot;,\n      &quot;authorization&quot;: [{\n          &quot;actor&quot;: &quot;eosio&quot;,\n          &quot;permission&quot;: &quot;active&quot;\n        }\n      ],\n      &quot;data&quot;: &quot;0000000000ea305500004d1a03ea30550100000000010000000000ea305500000000a8ed32320100000100000000010000000000ea305500000000a8ed3232010000&quot;\n    }\n  ],\n  &quot;transaction_extensions&quot;: [],\n  &quot;signatures&quot;: [],\n  &quot;context_free_data&quot;: []\n}</code></pre></div>\n<p>Fourth, generate a transaction containing the <code class=\"language-text\">eosio::setpriv</code> action which will make the <code class=\"language-text\">eosio.wrap</code> account privileged:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos push action -s -j -d eosio setpriv &#39;{&quot;account&quot;: &quot;eosio.wrap&quot;, &quot;is_priv&quot;: 1}&#39; -p eosio &gt; generated_setpriv_trx.json\n$ cat generated_setpriv_trx.json\n{\n  &quot;expiration&quot;: &quot;2018-06-29T17:11:36&quot;,\n  &quot;ref_block_num&quot;: 16349,\n  &quot;ref_block_prefix&quot;: 3248946195,\n  &quot;max_net_usage_words&quot;: 0,\n  &quot;max_cpu_usage_ms&quot;: 0,\n  &quot;delay_sec&quot;: 0,\n  &quot;context_free_actions&quot;: [],\n  &quot;actions&quot;: [{\n      &quot;account&quot;: &quot;eosio&quot;,\n      &quot;name&quot;: &quot;setpriv&quot;,\n      &quot;authorization&quot;: [{\n          &quot;actor&quot;: &quot;eosio&quot;,\n          &quot;permission&quot;: &quot;active&quot;\n        }\n      ],\n      &quot;data&quot;: &quot;00004d1a03ea305501&quot;\n    }\n  ],\n  &quot;transaction_extensions&quot;: [],\n  &quot;signatures&quot;: [],\n  &quot;context_free_data&quot;: []\n}</code></pre></div>\n<p>Next, the action JSONs of the previously generated transactions will be used to construct a unified transaction which will eventually be proposed with the eosio.msig contract. A good way to get started is to make a copy of the generated_newaccount_trx.json file (call the copied file create_wrap_account_trx.json) and edit the first three fields so it looks something like the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cat create_wrap_account_trx.json\n{\n  &quot;expiration&quot;: &quot;2018-07-06T12:00:00&quot;,\n  &quot;ref_block_num&quot;: 0,\n  &quot;ref_block_prefix&quot;: 0,\n  &quot;max_net_usage_words&quot;: 0,\n  &quot;max_cpu_usage_ms&quot;: 0,\n  &quot;delay_sec&quot;: 0,\n  &quot;context_free_actions&quot;: [],\n  &quot;actions&quot;: [{\n      &quot;account&quot;: &quot;eosio&quot;,\n      &quot;name&quot;: &quot;newaccount&quot;,\n      &quot;authorization&quot;: [{\n          &quot;actor&quot;: &quot;eosio&quot;,\n          &quot;permission&quot;: &quot;active&quot;\n        }\n      ],\n      &quot;data&quot;: &quot;0000000000ea305500004d1a03ea30550100000000010000000000ea305500000000a8ed32320100000100000000010000000000ea305500000000a8ed3232010000&quot;\n    }\n  ],\n  &quot;transaction_extensions&quot;: [],\n  &quot;signatures&quot;: [],\n  &quot;context_free_data&quot;: []\n}</code></pre></div>\n<p>The <code class=\"language-text\">ref_block_num</code> and <code class=\"language-text\">ref_block_prefix</code> values were set to 0. The proposed transaction does not need to have a valid TaPoS reference block because it will be reset anyway when scheduled as a deferred transaction during the <code class=\"language-text\">eosio.msig::exec</code> action. The <code class=\"language-text\">expiration</code> field, which was the only other field that was changed, will also be reset when the proposed transaction is scheduled as a deferred transaction during <code class=\"language-text\">eosio.msig::exec</code>. However, this field actually does matter during the propose-approve-exec lifecycle of the proposed transaction. If the present time passes the time in the <code class=\"language-text\">expiration</code> field of the proposed transaction, it will not be possible to execute the proposed transaction even if all necessary approvals are gathered. Therefore, it is important to set the expiration time to some point well enough in the future to give all necessary approvers enough time to review and approve the proposed transaction, but it is otherwise arbitrary. Generally, for reviewing/validation purposes it is important that all potential approvers of the transaction (i.e. the block producers) choose the exact same <code class=\"language-text\">expiration</code> time so that there is not any discrepancy in bytes of the serialized transaction if it was to later be included in payload data of some other action.</p>\n<p>Then, all but the first action JSON object of generated_account_creation_trx.json should be appended to the <code class=\"language-text\">actions</code> array of create_wrap_account_trx.json, and then the single action JSON object of generated_setpriv_trx.json should be appended to the <code class=\"language-text\">actions</code> array of create_wrap_account_trx.json. The final result is a create_wrap_account_trx.json file that looks like the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cat create_wrap_account_trx.json\n{\n  &quot;expiration&quot;: &quot;2018-07-06T12:00:00&quot;,\n  &quot;ref_block_num&quot;: 0,\n  &quot;ref_block_prefix&quot;: 0,\n  &quot;max_net_usage_words&quot;: 0,\n  &quot;max_cpu_usage_ms&quot;: 0,\n  &quot;delay_sec&quot;: 0,\n  &quot;context_free_actions&quot;: [],\n  &quot;actions&quot;: [{\n      &quot;account&quot;: &quot;eosio&quot;,\n      &quot;name&quot;: &quot;newaccount&quot;,\n      &quot;authorization&quot;: [{\n          &quot;actor&quot;: &quot;eosio&quot;,\n          &quot;permission&quot;: &quot;active&quot;\n        }\n      ],\n      &quot;data&quot;: &quot;0000000000ea305500004d1a03ea30550100000000010000000000ea305500000000a8ed32320100000100000000010000000000ea305500000000a8ed3232010000&quot;\n    },{\n      &quot;account&quot;: &quot;eosio&quot;,\n      &quot;name&quot;: &quot;buyrambytes&quot;,\n      &quot;authorization&quot;: [{\n          &quot;actor&quot;: &quot;eosio&quot;,\n          &quot;permission&quot;: &quot;active&quot;\n        }\n      ],\n      &quot;data&quot;: &quot;0000000000ea305500004d1a03ea305500c80000&quot;\n    },{\n      &quot;account&quot;: &quot;eosio&quot;,\n      &quot;name&quot;: &quot;delegatebw&quot;,\n      &quot;authorization&quot;: [{\n          &quot;actor&quot;: &quot;eosio&quot;,\n          &quot;permission&quot;: &quot;active&quot;\n        }\n      ],\n      &quot;data&quot;: &quot;0000000000ea305500004d1a03ea3055102700000000000004535953000000001027000000000000045359530000000001&quot;\n    },{\n      &quot;account&quot;: &quot;eosio&quot;,\n      &quot;name&quot;: &quot;setpriv&quot;,\n      &quot;authorization&quot;: [{\n          &quot;actor&quot;: &quot;eosio&quot;,\n          &quot;permission&quot;: &quot;active&quot;\n        }\n      ],\n      &quot;data&quot;: &quot;00004d1a03ea305501&quot;\n    }\n  ],\n  &quot;transaction_extensions&quot;: [],\n  &quot;signatures&quot;: [],\n  &quot;context_free_data&quot;: []\n}</code></pre></div>\n<p>The transaction in create_wrap_account_trx.json is now ready to be proposed.</p>\n<p>It will be useful to have a JSON of the active permissions of each of the active block producers for later when proposing transactions using the eosio.msig contract.</p>\n<p>This guide will assume that there are 21 active block producers on the chain with account names: <code class=\"language-text\">blkproducera</code>, <code class=\"language-text\">blkproducerb</code>, ..., <code class=\"language-text\">blkproduceru</code>.</p>\n<p>In that case, create a file producer_permissions.json with the content shown in the command below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cat producer_permissions.json\n[\n   {&quot;actor&quot;: &quot;blkproducera&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerb&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerc&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerd&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducere&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerf&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerg&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerh&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproduceri&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerj&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerk&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerl&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerm&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducern&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducero&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerp&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerq&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerr&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducers&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducert&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproduceru&quot;, &quot;permission&quot;: &quot;active&quot;}\n]</code></pre></div>\n<h4 id=\"112-propose-the-transaction-to-create-the-eosiowrap-account\"><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#112-propose-the-transaction-to-create-the-eosiowrap-account\" aria-label=\"112 propose the transaction to create the eosiowrap account permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1.2 Propose the transaction to create the eosio.wrap account</h4>\n<p>Only one of the potential approvers will need to propose the transaction that was created in the previous sub-section. All the other approvers should still follow the steps in the previous sub-section to generate the same create_wrap_account_trx.json file as all the other approvers. They will need this to compare to the actual proposed transaction prior to approving.</p>\n<p>The approvers are typically going to be the active block producers of the chain, so it makes sense that one of the block producers is elected as the leader to propose the actual transaction. Note that this lead block producer will need to incur the temporary RAM cost of proposing the transaction, but they will get the RAM back when the proposal has executed or has been canceled (which only the proposer can do prior to expiration).</p>\n<p>The guide will assume that <code class=\"language-text\">blkproducera</code> was chosen as the lead block producer to propose the transaction.</p>\n<p>The lead block producer (<code class=\"language-text\">blkproducera</code>) should propose the transaction stored in create_wrap_account_trx.json:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos multisig propose_trx createwrap producer_permissions.json create_wrap_account_trx.json blkproducera\nexecuted transaction: bf6aaa06b40e2a35491525cb11431efd2b5ac94e4a7a9c693c5bf0cfed942393  744 bytes  772 us\n#    eosio.msig &lt;= eosio.msig::propose          {&quot;proposer&quot;:&quot;blkproducera&quot;,&quot;proposal_name&quot;:&quot;createwrap&quot;,&quot;requested&quot;:[{&quot;actor&quot;:&quot;blkproducera&quot;,&quot;permis...\nwarning: transaction executed locally, but may not be confirmed by the network yet</code></pre></div>\n<h4 id=\"113-review-and-approve-the-transaction-to-create-the-eosiowrap-account\"><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#113-review-and-approve-the-transaction-to-create-the-eosiowrap-account\" aria-label=\"113 review and approve the transaction to create the eosiowrap account permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1.3 Review and approve the transaction to create the eosio.wrap account</h4>\n<p>Each of the potential approvers of the proposed transaction (i.e. the active block producers) should first review the proposed transaction to make sure they are not approving anything that they do not agree to.</p>\n<p>The proposed transaction can be reviewed using the <code class=\"language-text\">cleos multisig review</code> command:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos multisig review blkproducera createwrap &gt; create_wrap_account_trx_to_review.json\n$ head -n 30 create_wrap_account_trx_to_review.json\n{\n  &quot;proposal_name&quot;: &quot;createwrap&quot;,\n  &quot;packed_transaction&quot;: &quot;c0593f5b00000000000000000000040000000000ea305500409e9a2264b89a010000000000ea305500000000a8ed3232420000000000ea305500004d1a03ea30550100000000010000000000ea305500000000a8ed32320100000100000000010000000000ea305500000000a8ed32320100000000000000ea305500b0cafe4873bd3e010000000000ea305500000000a8ed3232140000000000ea305500004d1a03ea3055002800000000000000ea305500003f2a1ba6a24a010000000000ea305500000000a8ed3232310000000000ea305500004d1a03ea30551027000000000000045359530000000010270000000000000453595300000000010000000000ea305500000060bb5bb3c2010000000000ea305500000000a8ed32320900004d1a03ea30550100&quot;,\n  &quot;transaction&quot;: {\n    &quot;expiration&quot;: &quot;2018-07-06T12:00:00&quot;,\n    &quot;ref_block_num&quot;: 0,\n    &quot;ref_block_prefix&quot;: 0,\n    &quot;max_net_usage_words&quot;: 0,\n    &quot;max_cpu_usage_ms&quot;: 0,\n    &quot;delay_sec&quot;: 0,\n    &quot;context_free_actions&quot;: [],\n    &quot;actions&quot;: [{\n        &quot;account&quot;: &quot;eosio&quot;,\n        &quot;name&quot;: &quot;newaccount&quot;,\n        &quot;authorization&quot;: [{\n            &quot;actor&quot;: &quot;eosio&quot;,\n            &quot;permission&quot;: &quot;active&quot;\n          }\n        ],\n        &quot;data&quot;: {\n          &quot;creator&quot;: &quot;eosio&quot;,\n          &quot;name&quot;: &quot;eosio.wrap&quot;,\n          &quot;owner&quot;: {\n            &quot;threshold&quot;: 1,\n            &quot;keys&quot;: [],\n            &quot;accounts&quot;: [{\n                &quot;permission&quot;: {\n                  &quot;actor&quot;: &quot;eosio&quot;,\n                  &quot;permission&quot;: &quot;active&quot;\n                },</code></pre></div>\n<p>The approvers should go through the full human-readable transaction output and make sure everything looks fine. But they can also use tools to automatically compare the proposed transaction to the one they generated to make sure there are absolutely no differences:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos multisig propose_trx -j -s -d createwrap &#39;[]&#39; create_wrap_account_trx.json blkproducera | grep &#39;&quot;data&quot;:&#39; | sed &#39;s/^[ \\t]*&quot;data&quot;:[ \\t]*//;s/[&quot;,]//g&#39; | cut -c 35- &gt; expected_create_wrap_trx_serialized.hex\n$ cat expected_create_wrap_trx_serialized.hex\nc0593f5b00000000000000000000040000000000ea305500409e9a2264b89a010000000000ea305500000000a8ed3232420000000000ea305500004d1a03ea30550100000000010000000000ea305500000000a8ed32320100000100000000010000000000ea305500000000a8ed32320100000000000000ea305500b0cafe4873bd3e010000000000ea305500000000a8ed3232140000000000ea305500004d1a03ea3055002800000000000000ea305500003f2a1ba6a24a010000000000ea305500000000a8ed3232310000000000ea305500004d1a03ea30551027000000000000045359530000000010270000000000000453595300000000010000000000ea305500000060bb5bb3c2010000000000ea305500000000a8ed32320900004d1a03ea30550100\n$ cat create_wrap_account_trx_to_review.json | grep &#39;&quot;packed_transaction&quot;:&#39; | sed &#39;s/^[ \\t]*&quot;packed_transaction&quot;:[ \\t]*//;s/[&quot;,]//g&#39; &gt; proposed_create_wrap_trx_serialized.hex\n$ cat proposed_create_wrap_trx_serialized.hex\nc0593f5b00000000000000000000040000000000ea305500409e9a2264b89a010000000000ea305500000000a8ed3232420000000000ea305500004d1a03ea30550100000000010000000000ea305500000000a8ed32320100000100000000010000000000ea305500000000a8ed32320100000000000000ea305500b0cafe4873bd3e010000000000ea305500000000a8ed3232140000000000ea305500004d1a03ea3055002800000000000000ea305500003f2a1ba6a24a010000000000ea305500000000a8ed3232310000000000ea305500004d1a03ea30551027000000000000045359530000000010270000000000000453595300000000010000000000ea305500000060bb5bb3c2010000000000ea305500000000a8ed32320900004d1a03ea30550100\n$ diff expected_create_wrap_trx_serialized.hex proposed_create_wrap_trx_serialized.hex</code></pre></div>\n<p>When an approver (e.g. <code class=\"language-text\">blkproducerb</code>) is satisfied with the proposed transaction, they can simply approve it:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos multisig approve blkproducera createwrap &#39;{&quot;actor&quot;: &quot;blkproducerb&quot;, &quot;permission&quot;: &quot;active&quot;}&#39; -p blkproducerb\nexecuted transaction: 03a907e2a3192aac0cd040c73db8273c9da7696dc7960de22b1a479ae5ee9f23  128 bytes  472 us\n#    eosio.msig &lt;= eosio.msig::approve          {&quot;proposer&quot;:&quot;blkproducera&quot;,&quot;proposal_name&quot;:&quot;createwrap&quot;,&quot;level&quot;:{&quot;actor&quot;:&quot;blkproducerb&quot;,&quot;permission&quot;...\nwarning: transaction executed locally, but may not be confirmed by the network yet</code></pre></div>\n<h4 id=\"114-execute-the-transaction-to-create-the-eosiowrap-account\"><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#114-execute-the-transaction-to-create-the-eosiowrap-account\" aria-label=\"114 execute the transaction to create the eosiowrap account permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1.4 Execute the transaction to create the eosio.wrap account</h4>\n<p>When the necessary approvals are collected (in this example, with 21 block producers, at least 15 of their approvals were required), anyone can push the <code class=\"language-text\">eosio.msig::exec</code> action which executes the approved transaction. It makes a lot of sense for the lead block producer who proposed the transaction to also execute it (this will incur another temporary RAM cost for the deferred transaction that is generated by the eosio.msig contract).</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos multisig exec blkproducera createwrap blkproducera\nexecuted transaction: 7ecc183b99915cc411f96dde7c35c3fe0df6e732507f272af3a039b706482e5a  160 bytes  850 us\n#    eosio.msig &lt;= eosio.msig::exec             {&quot;proposer&quot;:&quot;blkproducera&quot;,&quot;proposal_name&quot;:&quot;createwrap&quot;,&quot;executer&quot;:&quot;blkproducera&quot;}\nwarning: transaction executed locally, but may not be confirmed by the network yet</code></pre></div>\n<p>Anyone can now verify that the <code class=\"language-text\">eosio.wrap</code> was created:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos get account eosio.wrap\nprivileged: true\npermissions:\n     owner     1:    1 eosio@active,\n        active     1:    1 eosio@active,\nmemory:\n     quota:     49.74 KiB    used:     3.33 KiB  \n\nnet bandwidth:\n     staked:          1.0000 SYS           (total stake delegated from account to self)\n     delegated:       0.0000 SYS           (total staked delegated to account from others)\n     used:                 0 bytes\n     available:        2.304 MiB  \n     limit:            2.304 MiB  \n\ncpu bandwidth:\n     staked:          1.0000 SYS           (total stake delegated from account to self)\n     delegated:       0.0000 SYS           (total staked delegated to account from others)\n     used:                 0 us   \n     available:        460.8 ms   \n     limit:            460.8 ms   \n\nproducers:     &lt;not voted&gt;</code></pre></div>\n<h3 id=\"12-deploy-the-eosiowrap-contract\"><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#12-deploy-the-eosiowrap-contract\" aria-label=\"12 deploy the eosiowrap contract permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2 Deploy the eosio.wrap contract</h3>\n<h4 id=\"121--generate-the-transaction-to-deploy-the-eosiowrap-contract\"><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#121--generate-the-transaction-to-deploy-the-eosiowrap-contract\" aria-label=\"121  generate the transaction to deploy the eosiowrap contract permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2.1  Generate the transaction to deploy the eosio.wrap contract</h4>\n<p>The transaction to deploy the contract to the <code class=\"language-text\">eosio.wrap</code> account will need to be proposed to get the necessary approvals from active block producers before executing it. This transaction needs to first be generated and stored as JSON into a file so that it can be used in the cleos command to propose the transaction to the eosio.msig contract.</p>\n<p>The easy way to generate this transaction is using cleos:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos set contract -s -j -d eosio.wrap contracts/eosio.wrap/ &gt; deploy_wrap_contract_trx.json\nReading WAST/WASM from contracts/eosio.wrap/eosio.wrap.wasm...\nUsing already assembled WASM...\nPublishing contract...\n$ cat deploy_wrap_contract_trx.json\n{\n  &quot;expiration&quot;: &quot;2018-06-29T19:55:26&quot;,\n  &quot;ref_block_num&quot;: 18544,\n  &quot;ref_block_prefix&quot;: 562790588,\n  &quot;max_net_usage_words&quot;: 0,\n  &quot;max_cpu_usage_ms&quot;: 0,\n  &quot;delay_sec&quot;: 0,\n  &quot;context_free_actions&quot;: [],\n  &quot;actions&quot;: [{\n      &quot;account&quot;: &quot;eosio&quot;,\n      &quot;name&quot;: &quot;setcode&quot;,\n      &quot;authorization&quot;: [{\n          &quot;actor&quot;: &quot;eosio.wrap&quot;,\n          &quot;permission&quot;: &quot;active&quot;\n        }\n      ],\n      &quot;data&quot;: &quot;00004d1a03ea30550000c8180061736d01000000013e0c60017f006000017e60027e7e0060017e006000017f60027f7f017f60027f7f0060037f7f7f017f60057f7e7f7f7f0060000060037e7e7e0060017f017f029d010803656e7610616374696f6e5f646174615f73697a65000403656e760c63757272656e745f74696d65000103656e760c656f73696f5f617373657274000603656e76066d656d637079000703656e7610726561645f616374696f6e5f64617461000503656e760c726571756972655f61757468000303656e760d726571756972655f6175746832000203656e760d73656e645f64656665727265640008030f0e0505050400000a05070b050b000904050170010202050301000107c7010b066d656d6f72790200165f5a6571524b3131636865636b73756d32353653315f0008165f5a6571524b3131636865636b73756d31363053315f0009165f5a6e65524b3131636865636b73756d31363053315f000a036e6f77000b305f5a4e35656f73696f3132726571756972655f6175746845524b4e535f31367065726d697373696f6e5f6c6576656c45000c155f5a4e35656f73696f347375646f34657865634576000d056170706c79000e066d656d636d700010066d616c6c6f630011046672656500140908010041000b02150d0a9a130e0b002000200141201010450b0b002000200141201010450b0d0020002001412010104100470b0a00100142c0843d80a70b0e002000290300200029030810060b9e0102017e027f410028020441206b2202210341002002360204200029030010050240024010002200418104490d002000101121020c010b410020022000410f6a4170716b22023602040b2002200010041a200041074b41101002200341186a2002410810031a2003290318100520032903182101200310013703002003200137030820032003290318200241086a2000410010074100200341206a3602040bfd0403027f047e017f4100410028020441206b220936020442002106423b2105412021044200210703400240024002400240024020064206560d0020042c00002203419f7f6a41ff017141194b0d01200341a5016a21030c020b420021082006420b580d020c030b200341d0016a41002003414f6a41ff01714105491b21030b2003ad42388642388721080b2008421f83200542ffffffff0f838621080b200441016a2104200642017c2106200820078421072005427b7c2205427a520d000b024020072002520d0042002106423b2105413021044200210703400240024002400240024020064204560d0020042c00002203419f7f6a41ff017141194b0d01200341a5016a21030c020b420021082006420b580d020c030b200341d0016a41002003414f6a41ff01714105491b21030b2003ad42388642388721080b2008421f83200542ffffffff0f838621080b200441016a2104200642017c2106200820078421072005427b7c2205427a520d000b200720015141c00010020b0240024020012000510d0042002106423b2105412021044200210703400240024002400240024020064206560d0020042c00002203419f7f6a41ff017141194b0d01200341a5016a21030c020b420021082006420b580d020c030b200341d0016a41002003414f6a41ff01714105491b21030b2003ad42388642388721080b2008421f83200542ffffffff0f838621080b200441016a2104200642017c2106200820078421072005427b7c2205427a520d000b20072002520d010b20092000370318200242808080808080a0aad700520d00200941003602142009410136021020092009290310370208200941186a200941086a100f1a0b4100200941206a3602040b8c0101047f4100280204220521042001280204210220012802002101024010002203450d00024020034180044d0d00200310112205200310041a200510140c010b410020052003410f6a4170716b22053602042005200310041a0b200020024101756a210302402002410171450d00200328020020016a28020021010b200320011100004100200436020441010b4901037f4100210502402002450d000240034020002d0000220320012d00002204470d01200141016a2101200041016a21002002417f6a22020d000c020b0b200320046b21050b20050b0900418001200010120bcd04010c7f02402001450d00024020002802c041220d0d004110210d200041c0c1006a41103602000b200141086a200141046a41077122026b200120021b210202400240024020002802c441220a200d4f0d002000200a410c6c6a4180c0006a21010240200a0d0020004184c0006a220d2802000d0020014180c000360200200d20003602000b200241046a210a034002402001280208220d200a6a20012802004b0d002001280204200d6a220d200d28020041808080807871200272360200200141086a22012001280200200a6a360200200d200d28020041808080807872360200200d41046a22010d030b2000101322010d000b0b41fcffffff0720026b2104200041c8c1006a210b200041c0c1006a210c20002802c8412203210d03402000200d410c6c6a22014188c0006a28020020014180c0006a22052802004641d0c200100220014184c0006a280200220641046a210d0340200620052802006a2107200d417c6a2208280200220941ffffffff07712101024020094100480d000240200120024f0d000340200d20016a220a20074f0d01200a280200220a4100480d012001200a41ffffffff07716a41046a22012002490d000b0b20082001200220012002491b200941808080807871723602000240200120024d0d00200d20026a200420016a41ffffffff07713602000b200120024f0d040b200d20016a41046a220d2007490d000b41002101200b4100200b28020041016a220d200d200c280200461b220d360200200d2003470d000b0b20010f0b2008200828020041808080807872360200200d0f0b41000b870501087f20002802c44121010240024041002d00a643450d0041002802a84321070c010b3f002107410041013a00a6434100200741107422073602a8430b200721030240024002400240200741ffff036a41107622023f0022084d0d00200220086b40001a4100210820023f00470d0141002802a84321030b41002108410020033602a84320074100480d0020002001410c6c6a210220074180800441808008200741ffff037122084181f8034922061b6a2008200741ffff077120061b6b20076b2107024041002d00a6430d003f002103410041013a00a6434100200341107422033602a8430b20024180c0006a210220074100480d01200321060240200741076a417871220520036a41ffff036a41107622083f0022044d0d00200820046b40001a20083f00470d0241002802a84321060b4100200620056a3602a8432003417f460d0120002001410c6c6a22014184c0006a2802002206200228020022086a2003460d020240200820014188c0006a22052802002201460d00200620016a2206200628020041808080807871417c20016b20086a72360200200520022802003602002006200628020041ffffffff07713602000b200041c4c1006a2202200228020041016a220236020020002002410c6c6a22004184c0006a200336020020004180c0006a220820073602000b20080f0b02402002280200220820002001410c6c6a22034188c0006a22012802002207460d0020034184c0006a28020020076a2203200328020041808080807871417c20076b20086a72360200200120022802003602002003200328020041ffffffff07713602000b2000200041c4c1006a220728020041016a22033602c0412007200336020041000f0b2002200820076a36020020020b7b01037f024002402000450d0041002802c04222024101480d004180c10021032002410c6c4180c1006a21010340200341046a2802002202450d010240200241046a20004b0d00200220032802006a20004b0d030b2003410c6a22032001490d000b0b0f0b2000417c6a2203200328020041ffffffff07713602000b0300000b0bcf01060041040b04b04900000041100b0572656164000041200b086f6e6572726f72000041300b06656f73696f000041c0000b406f6e6572726f7220616374696f6e277320617265206f6e6c792076616c69642066726f6d207468652022656f73696f222073797374656d206163636f756e74000041d0c2000b566d616c6c6f635f66726f6d5f6672656564207761732064657369676e656420746f206f6e6c792062652063616c6c6564206166746572205f686561702077617320636f6d706c6574656c7920616c6c6f636174656400&quot;\n    },{\n      &quot;account&quot;: &quot;eosio&quot;,\n      &quot;name&quot;: &quot;setabi&quot;,\n      &quot;authorization&quot;: [{\n          &quot;actor&quot;: &quot;eosio.wrap&quot;,\n          &quot;permission&quot;: &quot;active&quot;\n        }\n      ],\n      &quot;data&quot;: &quot;00004d1a03ea3055df040e656f73696f3a3a6162692f312e30030c6163636f756e745f6e616d65046e616d650f7065726d697373696f6e5f6e616d65046e616d650b616374696f6e5f6e616d65046e616d6506107065726d697373696f6e5f6c6576656c0002056163746f720c6163636f756e745f6e616d650a7065726d697373696f6e0f7065726d697373696f6e5f6e616d6506616374696f6e0004076163636f756e740c6163636f756e745f6e616d65046e616d650b616374696f6e5f6e616d650d617574686f72697a6174696f6e127065726d697373696f6e5f6c6576656c5b5d0464617461056279746573127472616e73616374696f6e5f68656164657200060a65787069726174696f6e0e74696d655f706f696e745f7365630d7265665f626c6f636b5f6e756d0675696e743136107265665f626c6f636b5f7072656669780675696e743332136d61785f6e65745f75736167655f776f7264730976617275696e743332106d61785f6370755f75736167655f6d730575696e74380964656c61795f7365630976617275696e74333209657874656e73696f6e000204747970650675696e74313604646174610562797465730b7472616e73616374696f6e127472616e73616374696f6e5f6865616465720314636f6e746578745f667265655f616374696f6e7308616374696f6e5b5d07616374696f6e7308616374696f6e5b5d167472616e73616374696f6e5f657874656e73696f6e730b657874656e73696f6e5b5d046578656300020865786563757465720c6163636f756e745f6e616d65037472780b7472616e73616374696f6e01000000000080545704657865630000000000&quot;\n    }\n  ],\n  &quot;transaction_extensions&quot;: [],\n  &quot;signatures&quot;: [],\n  &quot;context_free_data&quot;: []\n}</code></pre></div>\n<p>Once again, as described in sub-section 2.1.1, edit the values of the <code class=\"language-text\">ref_block_num</code> and <code class=\"language-text\">ref_block_prefix</code> fields to be 0 and edit the time of the <code class=\"language-text\">expiration</code> field to some point in the future that provides enough time to approve and execute the proposed transaction. After editing deploy_wrap_contract_trx.json the first few lines of it may look something like the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ head -n 9 deploy_wrap_contract_trx.json\n{\n  &quot;expiration&quot;: &quot;2018-07-06T12:00:00&quot;,\n  &quot;ref_block_num&quot;: 0,\n  &quot;ref_block_prefix&quot;: 0,\n  &quot;max_net_usage_words&quot;: 0,\n  &quot;max_cpu_usage_ms&quot;: 0,\n  &quot;delay_sec&quot;: 0,\n  &quot;context_free_actions&quot;: [],\n  &quot;actions&quot;: [{</code></pre></div>\n<p>This guide will assume that there are 21 active block producers on the chain with account names: <code class=\"language-text\">blkproducera</code>, <code class=\"language-text\">blkproducerb</code>, ..., <code class=\"language-text\">blkproduceru</code>. The end of sub-section 2.1.1 displayed what the JSON of the active permissions of each of the active block producers would look like given the assumptions about the active block producer set. That JSON was stored in the file producer_permissions.json; if the approvers (i.e. block producers) have not created that file already, they should create that file now as shown at the end of sub-section 2.1.1.</p>\n<h4 id=\"122-propose-the-transaction-to-deploy-the-eosiowrap-contract\"><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#122-propose-the-transaction-to-deploy-the-eosiowrap-contract\" aria-label=\"122 propose the transaction to deploy the eosiowrap contract permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2.2 Propose the transaction to deploy the eosio.wrap contract</h4>\n<p>Only one of the potential approvers will need to propose the transaction that was created in the previous sub-section. All the other approvers should still follow the steps in the previous sub-section to generate the same deploy_wrap_contract_trx.json file as all the other approvers. They will need this to compare to the actual proposed transaction prior to approving.</p>\n<p>The approvers are typically going to be the active block producers of the chain, so it makes sense that one of the block producers is elected as the leader to propose the actual transaction. Note that this lead block producer will need to incur the temporary RAM cost of proposing the transaction, but they will get the RAM back when the proposal has executed or has been canceled (which only the proposer can do prior to expiration).</p>\n<p>This guide will assume that <code class=\"language-text\">blkproducera</code> was chosen as the lead block producer to propose the transaction.</p>\n<p>The lead block producer (<code class=\"language-text\">blkproducera</code>) should propose the transaction stored in deploy_wrap_contract_trx.json:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos multisig propose_trx deploywrap producer_permissions.json deploy_wrap_contract_trx.json blkproducera\nexecuted transaction: 9e50dd40eba25583a657ee8114986a921d413b917002c8fb2d02e2d670f720a8  4312 bytes  871 us\n#    eosio.msig &lt;= eosio.msig::propose          {&quot;proposer&quot;:&quot;blkproducera&quot;,&quot;proposal_name&quot;:&quot;deploywrap&quot;,&quot;requested&quot;:[{&quot;actor&quot;:&quot;blkproducera&quot;,&quot;permis...\nwarning: transaction executed locally, but may not be confirmed by the network yet</code></pre></div>\n<h4 id=\"123-review-and-approve-the-transaction-to-deploy-the-eosiowrap-contract\"><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#123-review-and-approve-the-transaction-to-deploy-the-eosiowrap-contract\" aria-label=\"123 review and approve the transaction to deploy the eosiowrap contract permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2.3 Review and approve the transaction to deploy the eosio.wrap contract</h4>\n<p>Each of the potential approvers of the proposed transaction (i.e. the active block producers) should first review the proposed transaction to make sure they are not approving anything that they do not agree to.</p>\n<p>The proposed transaction can be reviewed using the <code class=\"language-text\">cleos multisig review</code> command:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos multisig review blkproducera deploywrap &gt; deploy_wrap_contract_trx_to_review.json\n$ cat deploy_wrap_contract_trx_to_review.json\n{\n  &quot;proposal_name&quot;: &quot;deploywrap&quot;,\n  &quot;packed_transaction&quot;: &quot;c0593f5b00000000000000000000020000000000ea305500000040258ab2c20100004d1a03ea305500000000a8ed3232d41800004d1a03ea30550000c8180061736d01000000013e0c60017f006000017e60027e7e0060017e006000017f60027f7f017f60027f7f0060037f7f7f017f60057f7e7f7f7f0060000060037e7e7e0060017f017f029d010803656e7610616374696f6e5f646174615f73697a65000403656e760c63757272656e745f74696d65000103656e760c656f73696f5f617373657274000603656e76066d656d637079000703656e7610726561645f616374696f6e5f64617461000503656e760c726571756972655f61757468000303656e760d726571756972655f6175746832000203656e760d73656e645f64656665727265640008030f0e0505050400000a05070b050b000904050170010202050301000107c7010b066d656d6f72790200165f5a6571524b3131636865636b73756d32353653315f0008165f5a6571524b3131636865636b73756d31363053315f0009165f5a6e65524b3131636865636b73756d31363053315f000a036e6f77000b305f5a4e35656f73696f3132726571756972655f6175746845524b4e535f31367065726d697373696f6e5f6c6576656c45000c155f5a4e35656f73696f347375646f34657865634576000d056170706c79000e066d656d636d700010066d616c6c6f630011046672656500140908010041000b02150d0a9a130e0b002000200141201010450b0b002000200141201010450b0d0020002001412010104100470b0a00100142c0843d80a70b0e002000290300200029030810060b9e0102017e027f410028020441206b2202210341002002360204200029030010050240024010002200418104490d002000101121020c010b410020022000410f6a4170716b22023602040b2002200010041a200041074b41101002200341186a2002410810031a2003290318100520032903182101200310013703002003200137030820032003290318200241086a2000410010074100200341206a3602040bfd0403027f047e017f4100410028020441206b220936020442002106423b2105412021044200210703400240024002400240024020064206560d0020042c00002203419f7f6a41ff017141194b0d01200341a5016a21030c020b420021082006420b580d020c030b200341d0016a41002003414f6a41ff01714105491b21030b2003ad42388642388721080b2008421f83200542ffffffff0f838621080b200441016a2104200642017c2106200820078421072005427b7c2205427a520d000b024020072002520d0042002106423b2105413021044200210703400240024002400240024020064204560d0020042c00002203419f7f6a41ff017141194b0d01200341a5016a21030c020b420021082006420b580d020c030b200341d0016a41002003414f6a41ff01714105491b21030b2003ad42388642388721080b2008421f83200542ffffffff0f838621080b200441016a2104200642017c2106200820078421072005427b7c2205427a520d000b200720015141c00010020b0240024020012000510d0042002106423b2105412021044200210703400240024002400240024020064206560d0020042c00002203419f7f6a41ff017141194b0d01200341a5016a21030c020b420021082006420b580d020c030b200341d0016a41002003414f6a41ff01714105491b21030b2003ad42388642388721080b2008421f83200542ffffffff0f838621080b200441016a2104200642017c2106200820078421072005427b7c2205427a520d000b20072002520d010b20092000370318200242808080808080a0aad700520d00200941003602142009410136021020092009290310370208200941186a200941086a100f1a0b4100200941206a3602040b8c0101047f4100280204220521042001280204210220012802002101024010002203450d00024020034180044d0d00200310112205200310041a200510140c010b410020052003410f6a4170716b22053602042005200310041a0b200020024101756a210302402002410171450d00200328020020016a28020021010b200320011100004100200436020441010b4901037f4100210502402002450d000240034020002d0000220320012d00002204470d01200141016a2101200041016a21002002417f6a22020d000c020b0b200320046b21050b20050b0900418001200010120bcd04010c7f02402001450d00024020002802c041220d0d004110210d200041c0c1006a41103602000b200141086a200141046a41077122026b200120021b210202400240024020002802c441220a200d4f0d002000200a410c6c6a4180c0006a21010240200a0d0020004184c0006a220d2802000d0020014180c000360200200d20003602000b200241046a210a034002402001280208220d200a6a20012802004b0d002001280204200d6a220d200d28020041808080807871200272360200200141086a22012001280200200a6a360200200d200d28020041808080807872360200200d41046a22010d030b2000101322010d000b0b41fcffffff0720026b2104200041c8c1006a210b200041c0c1006a210c20002802c8412203210d03402000200d410c6c6a22014188c0006a28020020014180c0006a22052802004641d0c200100220014184c0006a280200220641046a210d0340200620052802006a2107200d417c6a2208280200220941ffffffff07712101024020094100480d000240200120024f0d000340200d20016a220a20074f0d01200a280200220a4100480d012001200a41ffffffff07716a41046a22012002490d000b0b20082001200220012002491b200941808080807871723602000240200120024d0d00200d20026a200420016a41ffffffff07713602000b200120024f0d040b200d20016a41046a220d2007490d000b41002101200b4100200b28020041016a220d200d200c280200461b220d360200200d2003470d000b0b20010f0b2008200828020041808080807872360200200d0f0b41000b870501087f20002802c44121010240024041002d00a643450d0041002802a84321070c010b3f002107410041013a00a6434100200741107422073602a8430b200721030240024002400240200741ffff036a41107622023f0022084d0d00200220086b40001a4100210820023f00470d0141002802a84321030b41002108410020033602a84320074100480d0020002001410c6c6a210220074180800441808008200741ffff037122084181f8034922061b6a2008200741ffff077120061b6b20076b2107024041002d00a6430d003f002103410041013a00a6434100200341107422033602a8430b20024180c0006a210220074100480d01200321060240200741076a417871220520036a41ffff036a41107622083f0022044d0d00200820046b40001a20083f00470d0241002802a84321060b4100200620056a3602a8432003417f460d0120002001410c6c6a22014184c0006a2802002206200228020022086a2003460d020240200820014188c0006a22052802002201460d00200620016a2206200628020041808080807871417c20016b20086a72360200200520022802003602002006200628020041ffffffff07713602000b200041c4c1006a2202200228020041016a220236020020002002410c6c6a22004184c0006a200336020020004180c0006a220820073602000b20080f0b02402002280200220820002001410c6c6a22034188c0006a22012802002207460d0020034184c0006a28020020076a2203200328020041808080807871417c20076b20086a72360200200120022802003602002003200328020041ffffffff07713602000b2000200041c4c1006a220728020041016a22033602c0412007200336020041000f0b2002200820076a36020020020b7b01037f024002402000450d0041002802c04222024101480d004180c10021032002410c6c4180c1006a21010340200341046a2802002202450d010240200241046a20004b0d00200220032802006a20004b0d030b2003410c6a22032001490d000b0b0f0b2000417c6a2203200328020041ffffffff07713602000b0300000b0bcf01060041040b04b04900000041100b0572656164000041200b086f6e6572726f72000041300b06656f73696f000041c0000b406f6e6572726f7220616374696f6e277320617265206f6e6c792076616c69642066726f6d207468652022656f73696f222073797374656d206163636f756e74000041d0c2000b566d616c6c6f635f66726f6d5f6672656564207761732064657369676e656420746f206f6e6c792062652063616c6c6564206166746572205f686561702077617320636f6d706c6574656c7920616c6c6f6361746564000000000000ea305500000000b863b2c20100004d1a03ea305500000000a8ed3232e90400004d1a03ea3055df040e656f73696f3a3a6162692f312e30030c6163636f756e745f6e616d65046e616d650f7065726d697373696f6e5f6e616d65046e616d650b616374696f6e5f6e616d65046e616d6506107065726d697373696f6e5f6c6576656c0002056163746f720c6163636f756e745f6e616d650a7065726d697373696f6e0f7065726d697373696f6e5f6e616d6506616374696f6e0004076163636f756e740c6163636f756e745f6e616d65046e616d650b616374696f6e5f6e616d650d617574686f72697a6174696f6e127065726d697373696f6e5f6c6576656c5b5d0464617461056279746573127472616e73616374696f6e5f68656164657200060a65787069726174696f6e0e74696d655f706f696e745f7365630d7265665f626c6f636b5f6e756d0675696e743136107265665f626c6f636b5f7072656669780675696e743332136d61785f6e65745f75736167655f776f7264730976617275696e743332106d61785f6370755f75736167655f6d730575696e74380964656c61795f7365630976617275696e74333209657874656e73696f6e000204747970650675696e74313604646174610562797465730b7472616e73616374696f6e127472616e73616374696f6e5f6865616465720314636f6e746578745f667265655f616374696f6e7308616374696f6e5b5d07616374696f6e7308616374696f6e5b5d167472616e73616374696f6e5f657874656e73696f6e730b657874656e73696f6e5b5d046578656300020865786563757465720c6163636f756e745f6e616d65037472780b7472616e73616374696f6e0100000000008054570465786563000000000000&quot;,\n  &quot;transaction&quot;: {\n    &quot;expiration&quot;: &quot;2018-07-06T12:00:00&quot;,\n    &quot;ref_block_num&quot;: 0,\n    &quot;ref_block_prefix&quot;: 0,\n    &quot;max_net_usage_words&quot;: 0,\n    &quot;max_cpu_usage_ms&quot;: 0,\n    &quot;delay_sec&quot;: 0,\n    &quot;context_free_actions&quot;: [],\n    &quot;actions&quot;: [{\n        &quot;account&quot;: &quot;eosio&quot;,\n        &quot;name&quot;: &quot;setcode&quot;,\n        &quot;authorization&quot;: [{\n            &quot;actor&quot;: &quot;eosio.wrap&quot;,\n            &quot;permission&quot;: &quot;active&quot;\n          }\n        ],\n        &quot;data&quot;: {\n          &quot;account&quot;: &quot;eosio.wrap&quot;,\n          &quot;vmtype&quot;: 0,\n          &quot;vmversion&quot;: 0,\n          &quot;code&quot;: &quot;0061736d01000000013e0c60017f006000017e60027e7e0060017e006000017f60027f7f017f60027f7f0060037f7f7f017f60057f7e7f7f7f0060000060037e7e7e0060017f017f029d010803656e7610616374696f6e5f646174615f73697a65000403656e760c63757272656e745f74696d65000103656e760c656f73696f5f617373657274000603656e76066d656d637079000703656e7610726561645f616374696f6e5f64617461000503656e760c726571756972655f61757468000303656e760d726571756972655f6175746832000203656e760d73656e645f64656665727265640008030f0e0505050400000a05070b050b000904050170010202050301000107c7010b066d656d6f72790200165f5a6571524b3131636865636b73756d32353653315f0008165f5a6571524b3131636865636b73756d31363053315f0009165f5a6e65524b3131636865636b73756d31363053315f000a036e6f77000b305f5a4e35656f73696f3132726571756972655f6175746845524b4e535f31367065726d697373696f6e5f6c6576656c45000c155f5a4e35656f73696f347375646f34657865634576000d056170706c79000e066d656d636d700010066d616c6c6f630011046672656500140908010041000b02150d0a9a130e0b002000200141201010450b0b002000200141201010450b0d0020002001412010104100470b0a00100142c0843d80a70b0e002000290300200029030810060b9e0102017e027f410028020441206b2202210341002002360204200029030010050240024010002200418104490d002000101121020c010b410020022000410f6a4170716b22023602040b2002200010041a200041074b41101002200341186a2002410810031a2003290318100520032903182101200310013703002003200137030820032003290318200241086a2000410010074100200341206a3602040bfd0403027f047e017f4100410028020441206b220936020442002106423b2105412021044200210703400240024002400240024020064206560d0020042c00002203419f7f6a41ff017141194b0d01200341a5016a21030c020b420021082006420b580d020c030b200341d0016a41002003414f6a41ff01714105491b21030b2003ad42388642388721080b2008421f83200542ffffffff0f838621080b200441016a2104200642017c2106200820078421072005427b7c2205427a520d000b024020072002520d0042002106423b2105413021044200210703400240024002400240024020064204560d0020042c00002203419f7f6a41ff017141194b0d01200341a5016a21030c020b420021082006420b580d020c030b200341d0016a41002003414f6a41ff01714105491b21030b2003ad42388642388721080b2008421f83200542ffffffff0f838621080b200441016a2104200642017c2106200820078421072005427b7c2205427a520d000b200720015141c00010020b0240024020012000510d0042002106423b2105412021044200210703400240024002400240024020064206560d0020042c00002203419f7f6a41ff017141194b0d01200341a5016a21030c020b420021082006420b580d020c030b200341d0016a41002003414f6a41ff01714105491b21030b2003ad42388642388721080b2008421f83200542ffffffff0f838621080b200441016a2104200642017c2106200820078421072005427b7c2205427a520d000b20072002520d010b20092000370318200242808080808080a0aad700520d00200941003602142009410136021020092009290310370208200941186a200941086a100f1a0b4100200941206a3602040b8c0101047f4100280204220521042001280204210220012802002101024010002203450d00024020034180044d0d00200310112205200310041a200510140c010b410020052003410f6a4170716b22053602042005200310041a0b200020024101756a210302402002410171450d00200328020020016a28020021010b200320011100004100200436020441010b4901037f4100210502402002450d000240034020002d0000220320012d00002204470d01200141016a2101200041016a21002002417f6a22020d000c020b0b200320046b21050b20050b0900418001200010120bcd04010c7f02402001450d00024020002802c041220d0d004110210d200041c0c1006a41103602000b200141086a200141046a41077122026b200120021b210202400240024020002802c441220a200d4f0d002000200a410c6c6a4180c0006a21010240200a0d0020004184c0006a220d2802000d0020014180c000360200200d20003602000b200241046a210a034002402001280208220d200a6a20012802004b0d002001280204200d6a220d200d28020041808080807871200272360200200141086a22012001280200200a6a360200200d200d28020041808080807872360200200d41046a22010d030b2000101322010d000b0b41fcffffff0720026b2104200041c8c1006a210b200041c0c1006a210c20002802c8412203210d03402000200d410c6c6a22014188c0006a28020020014180c0006a22052802004641d0c200100220014184c0006a280200220641046a210d0340200620052802006a2107200d417c6a2208280200220941ffffffff07712101024020094100480d000240200120024f0d000340200d20016a220a20074f0d01200a280200220a4100480d012001200a41ffffffff07716a41046a22012002490d000b0b20082001200220012002491b200941808080807871723602000240200120024d0d00200d20026a200420016a41ffffffff07713602000b200120024f0d040b200d20016a41046a220d2007490d000b41002101200b4100200b28020041016a220d200d200c280200461b220d360200200d2003470d000b0b20010f0b2008200828020041808080807872360200200d0f0b41000b870501087f20002802c44121010240024041002d00a643450d0041002802a84321070c010b3f002107410041013a00a6434100200741107422073602a8430b200721030240024002400240200741ffff036a41107622023f0022084d0d00200220086b40001a4100210820023f00470d0141002802a84321030b41002108410020033602a84320074100480d0020002001410c6c6a210220074180800441808008200741ffff037122084181f8034922061b6a2008200741ffff077120061b6b20076b2107024041002d00a6430d003f002103410041013a00a6434100200341107422033602a8430b20024180c0006a210220074100480d01200321060240200741076a417871220520036a41ffff036a41107622083f0022044d0d00200820046b40001a20083f00470d0241002802a84321060b4100200620056a3602a8432003417f460d0120002001410c6c6a22014184c0006a2802002206200228020022086a2003460d020240200820014188c0006a22052802002201460d00200620016a2206200628020041808080807871417c20016b20086a72360200200520022802003602002006200628020041ffffffff07713602000b200041c4c1006a2202200228020041016a220236020020002002410c6c6a22004184c0006a200336020020004180c0006a220820073602000b20080f0b02402002280200220820002001410c6c6a22034188c0006a22012802002207460d0020034184c0006a28020020076a2203200328020041808080807871417c20076b20086a72360200200120022802003602002003200328020041ffffffff07713602000b2000200041c4c1006a220728020041016a22033602c0412007200336020041000f0b2002200820076a36020020020b7b01037f024002402000450d0041002802c04222024101480d004180c10021032002410c6c4180c1006a21010340200341046a2802002202450d010240200241046a20004b0d00200220032802006a20004b0d030b2003410c6a22032001490d000b0b0f0b2000417c6a2203200328020041ffffffff07713602000b0300000b0bcf01060041040b04b04900000041100b0572656164000041200b086f6e6572726f72000041300b06656f73696f000041c0000b406f6e6572726f7220616374696f6e277320617265206f6e6c792076616c69642066726f6d207468652022656f73696f222073797374656d206163636f756e74000041d0c2000b566d616c6c6f635f66726f6d5f6672656564207761732064657369676e656420746f206f6e6c792062652063616c6c6564206166746572205f686561702077617320636f6d706c6574656c7920616c6c6f636174656400&quot;\n        },\n        &quot;hex_data&quot;: &quot;00004d1a03ea30550000c8180061736d01000000013e0c60017f006000017e60027e7e0060017e006000017f60027f7f017f60027f7f0060037f7f7f017f60057f7e7f7f7f0060000060037e7e7e0060017f017f029d010803656e7610616374696f6e5f646174615f73697a65000403656e760c63757272656e745f74696d65000103656e760c656f73696f5f617373657274000603656e76066d656d637079000703656e7610726561645f616374696f6e5f64617461000503656e760c726571756972655f61757468000303656e760d726571756972655f6175746832000203656e760d73656e645f64656665727265640008030f0e0505050400000a05070b050b000904050170010202050301000107c7010b066d656d6f72790200165f5a6571524b3131636865636b73756d32353653315f0008165f5a6571524b3131636865636b73756d31363053315f0009165f5a6e65524b3131636865636b73756d31363053315f000a036e6f77000b305f5a4e35656f73696f3132726571756972655f6175746845524b4e535f31367065726d697373696f6e5f6c6576656c45000c155f5a4e35656f73696f347375646f34657865634576000d056170706c79000e066d656d636d700010066d616c6c6f630011046672656500140908010041000b02150d0a9a130e0b002000200141201010450b0b002000200141201010450b0d0020002001412010104100470b0a00100142c0843d80a70b0e002000290300200029030810060b9e0102017e027f410028020441206b2202210341002002360204200029030010050240024010002200418104490d002000101121020c010b410020022000410f6a4170716b22023602040b2002200010041a200041074b41101002200341186a2002410810031a2003290318100520032903182101200310013703002003200137030820032003290318200241086a2000410010074100200341206a3602040bfd0403027f047e017f4100410028020441206b220936020442002106423b2105412021044200210703400240024002400240024020064206560d0020042c00002203419f7f6a41ff017141194b0d01200341a5016a21030c020b420021082006420b580d020c030b200341d0016a41002003414f6a41ff01714105491b21030b2003ad42388642388721080b2008421f83200542ffffffff0f838621080b200441016a2104200642017c2106200820078421072005427b7c2205427a520d000b024020072002520d0042002106423b2105413021044200210703400240024002400240024020064204560d0020042c00002203419f7f6a41ff017141194b0d01200341a5016a21030c020b420021082006420b580d020c030b200341d0016a41002003414f6a41ff01714105491b21030b2003ad42388642388721080b2008421f83200542ffffffff0f838621080b200441016a2104200642017c2106200820078421072005427b7c2205427a520d000b200720015141c00010020b0240024020012000510d0042002106423b2105412021044200210703400240024002400240024020064206560d0020042c00002203419f7f6a41ff017141194b0d01200341a5016a21030c020b420021082006420b580d020c030b200341d0016a41002003414f6a41ff01714105491b21030b2003ad42388642388721080b2008421f83200542ffffffff0f838621080b200441016a2104200642017c2106200820078421072005427b7c2205427a520d000b20072002520d010b20092000370318200242808080808080a0aad700520d00200941003602142009410136021020092009290310370208200941186a200941086a100f1a0b4100200941206a3602040b8c0101047f4100280204220521042001280204210220012802002101024010002203450d00024020034180044d0d00200310112205200310041a200510140c010b410020052003410f6a4170716b22053602042005200310041a0b200020024101756a210302402002410171450d00200328020020016a28020021010b200320011100004100200436020441010b4901037f4100210502402002450d000240034020002d0000220320012d00002204470d01200141016a2101200041016a21002002417f6a22020d000c020b0b200320046b21050b20050b0900418001200010120bcd04010c7f02402001450d00024020002802c041220d0d004110210d200041c0c1006a41103602000b200141086a200141046a41077122026b200120021b210202400240024020002802c441220a200d4f0d002000200a410c6c6a4180c0006a21010240200a0d0020004184c0006a220d2802000d0020014180c000360200200d20003602000b200241046a210a034002402001280208220d200a6a20012802004b0d002001280204200d6a220d200d28020041808080807871200272360200200141086a22012001280200200a6a360200200d200d28020041808080807872360200200d41046a22010d030b2000101322010d000b0b41fcffffff0720026b2104200041c8c1006a210b200041c0c1006a210c20002802c8412203210d03402000200d410c6c6a22014188c0006a28020020014180c0006a22052802004641d0c200100220014184c0006a280200220641046a210d0340200620052802006a2107200d417c6a2208280200220941ffffffff07712101024020094100480d000240200120024f0d000340200d20016a220a20074f0d01200a280200220a4100480d012001200a41ffffffff07716a41046a22012002490d000b0b20082001200220012002491b200941808080807871723602000240200120024d0d00200d20026a200420016a41ffffffff07713602000b200120024f0d040b200d20016a41046a220d2007490d000b41002101200b4100200b28020041016a220d200d200c280200461b220d360200200d2003470d000b0b20010f0b2008200828020041808080807872360200200d0f0b41000b870501087f20002802c44121010240024041002d00a643450d0041002802a84321070c010b3f002107410041013a00a6434100200741107422073602a8430b200721030240024002400240200741ffff036a41107622023f0022084d0d00200220086b40001a4100210820023f00470d0141002802a84321030b41002108410020033602a84320074100480d0020002001410c6c6a210220074180800441808008200741ffff037122084181f8034922061b6a2008200741ffff077120061b6b20076b2107024041002d00a6430d003f002103410041013a00a6434100200341107422033602a8430b20024180c0006a210220074100480d01200321060240200741076a417871220520036a41ffff036a41107622083f0022044d0d00200820046b40001a20083f00470d0241002802a84321060b4100200620056a3602a8432003417f460d0120002001410c6c6a22014184c0006a2802002206200228020022086a2003460d020240200820014188c0006a22052802002201460d00200620016a2206200628020041808080807871417c20016b20086a72360200200520022802003602002006200628020041ffffffff07713602000b200041c4c1006a2202200228020041016a220236020020002002410c6c6a22004184c0006a200336020020004180c0006a220820073602000b20080f0b02402002280200220820002001410c6c6a22034188c0006a22012802002207460d0020034184c0006a28020020076a2203200328020041808080807871417c20076b20086a72360200200120022802003602002003200328020041ffffffff07713602000b2000200041c4c1006a220728020041016a22033602c0412007200336020041000f0b2002200820076a36020020020b7b01037f024002402000450d0041002802c04222024101480d004180c10021032002410c6c4180c1006a21010340200341046a2802002202450d010240200241046a20004b0d00200220032802006a20004b0d030b2003410c6a22032001490d000b0b0f0b2000417c6a2203200328020041ffffffff07713602000b0300000b0bcf01060041040b04b04900000041100b0572656164000041200b086f6e6572726f72000041300b06656f73696f000041c0000b406f6e6572726f7220616374696f6e277320617265206f6e6c792076616c69642066726f6d207468652022656f73696f222073797374656d206163636f756e74000041d0c2000b566d616c6c6f635f66726f6d5f6672656564207761732064657369676e656420746f206f6e6c792062652063616c6c6564206166746572205f686561702077617320636f6d706c6574656c7920616c6c6f636174656400&quot;\n      },{\n        &quot;account&quot;: &quot;eosio&quot;,\n        &quot;name&quot;: &quot;setabi&quot;,\n        &quot;authorization&quot;: [{\n            &quot;actor&quot;: &quot;eosio.wrap&quot;,\n            &quot;permission&quot;: &quot;active&quot;\n          }\n        ],\n        &quot;data&quot;: {\n          &quot;account&quot;: &quot;eosio.wrap&quot;,\n          &quot;abi&quot;: &quot;0e656f73696f3a3a6162692f312e30030c6163636f756e745f6e616d65046e616d650f7065726d697373696f6e5f6e616d65046e616d650b616374696f6e5f6e616d65046e616d6506107065726d697373696f6e5f6c6576656c0002056163746f720c6163636f756e745f6e616d650a7065726d697373696f6e0f7065726d697373696f6e5f6e616d6506616374696f6e0004076163636f756e740c6163636f756e745f6e616d65046e616d650b616374696f6e5f6e616d650d617574686f72697a6174696f6e127065726d697373696f6e5f6c6576656c5b5d0464617461056279746573127472616e73616374696f6e5f68656164657200060a65787069726174696f6e0e74696d655f706f696e745f7365630d7265665f626c6f636b5f6e756d0675696e743136107265665f626c6f636b5f7072656669780675696e743332136d61785f6e65745f75736167655f776f7264730976617275696e743332106d61785f6370755f75736167655f6d730575696e74380964656c61795f7365630976617275696e74333209657874656e73696f6e000204747970650675696e74313604646174610562797465730b7472616e73616374696f6e127472616e73616374696f6e5f6865616465720314636f6e746578745f667265655f616374696f6e7308616374696f6e5b5d07616374696f6e7308616374696f6e5b5d167472616e73616374696f6e5f657874656e73696f6e730b657874656e73696f6e5b5d046578656300020865786563757465720c6163636f756e745f6e616d65037472780b7472616e73616374696f6e01000000000080545704657865630000000000&quot;\n        },\n        &quot;hex_data&quot;: &quot;00004d1a03ea3055df040e656f73696f3a3a6162692f312e30030c6163636f756e745f6e616d65046e616d650f7065726d697373696f6e5f6e616d65046e616d650b616374696f6e5f6e616d65046e616d6506107065726d697373696f6e5f6c6576656c0002056163746f720c6163636f756e745f6e616d650a7065726d697373696f6e0f7065726d697373696f6e5f6e616d6506616374696f6e0004076163636f756e740c6163636f756e745f6e616d65046e616d650b616374696f6e5f6e616d650d617574686f72697a6174696f6e127065726d697373696f6e5f6c6576656c5b5d0464617461056279746573127472616e73616374696f6e5f68656164657200060a65787069726174696f6e0e74696d655f706f696e745f7365630d7265665f626c6f636b5f6e756d0675696e743136107265665f626c6f636b5f7072656669780675696e743332136d61785f6e65745f75736167655f776f7264730976617275696e743332106d61785f6370755f75736167655f6d730575696e74380964656c61795f7365630976617275696e74333209657874656e73696f6e000204747970650675696e74313604646174610562797465730b7472616e73616374696f6e127472616e73616374696f6e5f6865616465720314636f6e746578745f667265655f616374696f6e7308616374696f6e5b5d07616374696f6e7308616374696f6e5b5d167472616e73616374696f6e5f657874656e73696f6e730b657874656e73696f6e5b5d046578656300020865786563757465720c6163636f756e745f6e616d65037472780b7472616e73616374696f6e01000000000080545704657865630000000000&quot;\n      }\n    ],\n    &quot;transaction_extensions&quot;: []\n  }\n}</code></pre></div>\n<p>Each approver should be able to see that the proposed transaction is setting the code and ABI of the <code class=\"language-text\">eosio.wrap</code> contract. But the data is just hex data and therefore not very meaningful to the approver. And considering that <code class=\"language-text\">eosio.wrap</code> at this point should be a privileged contract, it would be very dangerous for block producers to just allow a contract to be deployed to a privileged account without knowing exactly which WebAssembly code they are deploying and also auditing the source code that generated that WebAssembly code to ensure it is safe to deploy.</p>\n<p>This guide assumes that each approver has already audited the source code of the contract to be deployed and has already compiled that code to generate the WebAssembly code that should be byte-for-byte identical to the code that every other approver following the same process should have generated. The guide also assumes that this generated code and its associated ABI were provided in the steps in sub-section 2.2.1 that generated the transaction in the deploy_wrap_contract_trx.json file. It then becomes quite simple to verify that the proposed transaction is identical to the one the potential approver could have proposed with the code and ABI that they already audited:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos multisig propose_trx -j -s -d deploywrap &#39;[]&#39; deploy_wrap_contract_trx.json blkproducera | grep &#39;&quot;data&quot;:&#39; | sed &#39;s/^[ \\t]*&quot;data&quot;:[ \\t]*//;s/[&quot;,]//g&#39; | cut -c 35- &gt; expected_deploy_wrap_trx_serialized.hex\n$ cat expected_deploy_wrap_trx_serialized.hex | cut -c -50\nc0593f5b00000000000000000000020000000000ea30550000\n$ cat deploy_wrap_account_trx_to_review.json | grep &#39;&quot;packed_transaction&quot;:&#39; | sed &#39;s/^[ \\t]*&quot;packed_transaction&quot;:[ \\t]*//;s/[&quot;,]//g&#39; &gt; proposed_deploy_wrap_trx_serialized.hex\n$ cat proposed_deploy_wrap_trx_serialized.hex | cut -c -50\nc0593f5b00000000000000000000020000000000ea30550000\n$ diff expected_deploy_wrap_trx_serialized.hex proposed_deploy_wrap_trx_serialized.hex</code></pre></div>\n<p>When an approver (e.g. <code class=\"language-text\">blkproducerb</code>) is satisfied with the proposed transaction, they can simply approve it:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos multisig approve blkproducera deploywrap &#39;{&quot;actor&quot;: &quot;blkproducerb&quot;, &quot;permission&quot;: &quot;active&quot;}&#39; -p blkproducerb\nexecuted transaction: d1e424e05ee4d96eb079fcd5190dd0bf35eca8c27dd7231b59df8e464881abfd  128 bytes  483 us\n#    eosio.msig &lt;= eosio.msig::approve          {&quot;proposer&quot;:&quot;blkproducera&quot;,&quot;proposal_name&quot;:&quot;deploywrap&quot;,&quot;level&quot;:{&quot;actor&quot;:&quot;blkproducerb&quot;,&quot;permission&quot;...\nwarning: transaction executed locally, but may not be confirmed by the network yet</code></pre></div>\n<h4 id=\"124-execute-the-transaction-to-create-the-eosiowrap-account\"><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#124-execute-the-transaction-to-create-the-eosiowrap-account\" aria-label=\"124 execute the transaction to create the eosiowrap account permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2.4 Execute the transaction to create the eosio.wrap account</h4>\n<p>When the necessary approvals are collected (in this example, with 21 block producers, at least 15 of their approvals were required), anyone can push the <code class=\"language-text\">eosio.msig::exec</code> action which executes the approved transaction. It makes a lot of sense for the lead block producer who proposed the transaction to also execute it (this will incur another temporary RAM cost for the deferred transaction that is generated by the eosio.msig contract).</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos multisig exec blkproducera deploywrap blkproducera\nexecuted transaction: e8da14c6f1fdc3255b5413adccfd0d89b18f832a4cc18c4324ea2beec6abd483  160 bytes  1877 us\n#    eosio.msig &lt;= eosio.msig::exec             {&quot;proposer&quot;:&quot;blkproducera&quot;,&quot;proposal_name&quot;:&quot;deploywrap&quot;,&quot;executer&quot;:&quot;blkproducera&quot;}</code></pre></div>\n<p>Anyone can now verify that the <code class=\"language-text\">eosio.wrap</code> contract was deployed correctly.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos get code -a retrieved-eosio.wrap.abi eosio.wrap\ncode hash: 1b3456a5eca28bcaca7a2a3360fbb2a72b9772a416c8e11a303bcb26bfe3263c\nsaving abi to retrieved-eosio.wrap.abi\n$ sha256sum contracts/eosio.wrap/eosio.wrap.wasm\n1b3456a5eca28bcaca7a2a3360fbb2a72b9772a416c8e11a303bcb26bfe3263c  contracts/eosio.wrap/eosio.wrap.wasm</code></pre></div>\n<p>If the two hashes match then the local WebAssembly code is the one deployed on the blockchain. The retrieved ABI, which was stored in the file retrieved-eosio.wrap.abi, can then be compared to the original ABI of the contract (contracts/eosio.wrap/eosio.wrap.abi) to ensure they are semantically the same.</p>\n<h2 id=\"2-using-the-eosiowrap-contract\"><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#2-using-the-eosiowrap-contract\" aria-label=\"2 using the eosiowrap contract permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Using the eosio.wrap contract</h2>\n<h3 id=\"21-example-updating-owner-authority-of-an-arbitrary-account\"><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#21-example-updating-owner-authority-of-an-arbitrary-account\" aria-label=\"21 example updating owner authority of an arbitrary account permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1 Example: Updating owner authority of an arbitrary account</h3>\n<p>This example will demonstrate how to use the deployed eosio.wrap contract together with the eosio.msig contract to allow a greater than two-thirds supermajority of block producers of an EOSIO blockchain to change the owner authority of an arbitrary account. The example will use cleos: in particular, the <code class=\"language-text\">cleos multisig</code> command, the <code class=\"language-text\">cleos set account permission</code> sub-command, and the <code class=\"language-text\">cleos wrap exec</code> sub-command. However, the guide also demonstrates what to do if the <code class=\"language-text\">cleos wrap exec</code> sub-command is not available.</p>\n<p>This guide assumes that there are 21 active block producers on the chain with account names: <code class=\"language-text\">blkproducera</code>, <code class=\"language-text\">blkproducerb</code>, ..., <code class=\"language-text\">blkproduceru</code>. Block producer <code class=\"language-text\">blkproducera</code> will act as the lead block producer handling the proposal of the transaction.</p>\n<p>The producer permissions will later come in handy when proposing a transaction that must be approved by a supermajority of the producers. So a file producer_permissions.json containing those permission (see contents below) should be created to be used later in this guide:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cat producer_permissions.json\n[\n   {&quot;actor&quot;: &quot;blkproducera&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerb&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerc&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerd&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducere&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerf&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerg&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerh&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproduceri&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerj&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerk&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerl&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerm&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducern&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducero&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerp&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerq&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducerr&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducers&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproducert&quot;, &quot;permission&quot;: &quot;active&quot;},\n   {&quot;actor&quot;: &quot;blkproduceru&quot;, &quot;permission&quot;: &quot;active&quot;}\n]</code></pre></div>\n<h4 id=\"211-generate-the-transaction-to-change-the-owner-permission-of-an-account\"><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#211-generate-the-transaction-to-change-the-owner-permission-of-an-account\" aria-label=\"211 generate the transaction to change the owner permission of an account permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1.1 Generate the transaction to change the owner permission of an account</h4>\n<p>The goal of this example is for the block producers to change the owner permission of the account <code class=\"language-text\">alice</code>.</p>\n<p>The initial status of the <code class=\"language-text\">alice</code> account might be:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">permissions:\n     owner     1:    1 EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV\n        active     1:    1 EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV\nmemory:\n     quota:     49.74 KiB    used:     3.365 KiB  \n\nnet bandwidth:\n     staked:          1.0000 SYS           (total stake delegated from account to self)\n     delegated:       0.0000 SYS           (total staked delegated to account from others)\n     used:                 0 bytes\n     available:        2.304 MiB  \n     limit:            2.304 MiB  \n\ncpu bandwidth:\n     staked:          1.0000 SYS           (total stake delegated from account to self)\n     delegated:       0.0000 SYS           (total staked delegated to account from others)\n     used:                 0 us   \n     available:        460.8 ms   \n     limit:            460.8 ms   \n\nproducers:     &lt;not voted&gt;</code></pre></div>\n<p>Assume that none of the block producers know the private key corresponding to the public key <code class=\"language-text\">EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV</code> which, as can be seen above, is initially securing access to the <code class=\"language-text\">alice</code> account.</p>\n<p>The first step is to generate the transaction changing the owner permission of the <code class=\"language-text\">alice</code> account as if <code class=\"language-text\">alice</code> is authorizing the change:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos set account permission -s -j -d alice owner &#39;{&quot;threshold&quot;: 1, &quot;accounts&quot;: [{&quot;permission&quot;: {&quot;actor&quot;: &quot;eosio&quot;, &quot;permission&quot;: &quot;active&quot;}, &quot;weight&quot;: 1}]}&#39; &gt; update_alice_owner_trx.json</code></pre></div>\n<p>Then modify update_alice_owner_trx.json so that the values for the <code class=\"language-text\">ref_block_num</code> and <code class=\"language-text\">ref_block_prefix</code> fields are both 0 and the value of the <code class=\"language-text\">expiration</code> field is <code class=\"language-text\">&quot;1970-01-01T00:00:00&quot;</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cat update_alice_owner_trx.json\n{\n  &quot;expiration&quot;: &quot;1970-01-01T00:00:00&quot;,\n  &quot;ref_block_num&quot;: 0,\n  &quot;ref_block_prefix&quot;: 0,\n  &quot;max_net_usage_words&quot;: 0,\n  &quot;max_cpu_usage_ms&quot;: 0,\n  &quot;delay_sec&quot;: 0,\n  &quot;context_free_actions&quot;: [],\n  &quot;actions&quot;: [{\n      &quot;account&quot;: &quot;eosio&quot;,\n      &quot;name&quot;: &quot;updateauth&quot;,\n      &quot;authorization&quot;: [{\n          &quot;actor&quot;: &quot;alice&quot;,\n          &quot;permission&quot;: &quot;active&quot;\n        }\n      ],\n      &quot;data&quot;: &quot;0000000000855c340000000080ab26a700000000000000000100000000010000000000ea305500000000a8ed3232010000&quot;\n    }\n  ],\n  &quot;transaction_extensions&quot;: [],\n  &quot;signatures&quot;: [],\n  &quot;context_free_data&quot;: []\n}</code></pre></div>\n<p>The next step is to generate the transaction containing the <code class=\"language-text\">eosio.wrap::exec</code> action. This action will contain the transaction in update_alice_owner_trx.json as part of its action payload data.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos wrap exec -s -j -d blkproducera update_alice_owner_trx.json &gt; wrap_update_alice_owner_trx.json</code></pre></div>\n<p>Once again modify wrap_update_alice_owner_trx.json so that the value for the <code class=\"language-text\">ref_block_num</code> and <code class=\"language-text\">ref_block_prefix</code> fields are both 0. However, instead of changing the value of the expiration field to <code class=\"language-text\">&quot;1970-01-01T00:00:00&quot;</code>, it should be changed to a time that is far enough in the future to allow enough time for the proposed transaction to be approved and executed.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cat wrap_update_alice_owner_trx.json\n{\n  &quot;expiration&quot;: &quot;2018-07-06T12:00:00&quot;,\n  &quot;ref_block_num&quot;: 0,\n  &quot;ref_block_prefix&quot;: 0,\n  &quot;max_net_usage_words&quot;: 0,\n  &quot;max_cpu_usage_ms&quot;: 0,\n  &quot;delay_sec&quot;: 0,\n  &quot;context_free_actions&quot;: [],\n  &quot;actions&quot;: [{\n      &quot;account&quot;: &quot;eosio.wrap&quot;,\n      &quot;name&quot;: &quot;exec&quot;,\n      &quot;authorization&quot;: [{\n          &quot;actor&quot;: &quot;blkproducera&quot;,\n          &quot;permission&quot;: &quot;active&quot;\n        },{\n          &quot;actor&quot;: &quot;eosio.wrap&quot;,\n          &quot;permission&quot;: &quot;active&quot;\n        }\n      ],\n      &quot;data&quot;: &quot;60ae423ad15b613c0000000000000000000000000000010000000000ea30550040cbdaa86c52d5010000000000855c3400000000a8ed3232310000000000855c340000000080ab26a700000000000000000100000000010000000000ea305500000000a8ed323201000000&quot;\n    }\n  ],\n  &quot;transaction_extensions&quot;: [],\n  &quot;signatures&quot;: [],\n  &quot;context_free_data&quot;: []\n}</code></pre></div>\n<p>If the <code class=\"language-text\">cleos wrap</code> command is not available, there is an alternative way to generate the above transaction. There is no need to continue reading the remaining of sub-section 3.1.1 if the wrap_update_alice_owner_trx.json file was already generated with content similar to the above using the <code class=\"language-text\">cleos wrap exec</code> sub-command method.</p>\n<p>First the hex encoding of the binary serialization of the transaction in update_alice_owner_trx.json must be obtained. One way of obtaining this data is through the following command:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos multisig propose_trx -s -j -d nothing &#39;[]&#39; update_alice_owner_trx.json nothing | grep &#39;&quot;data&quot;:&#39; | sed &#39;s/^[ \\t]*&quot;data&quot;:[ \\t]*//;s/[&quot;,]//g&#39; | cut -c 35- &gt; update_alice_owner_trx_serialized.hex\n$ cat update_alice_owner_trx_serialized.hex\n0000000000000000000000000000010000000000ea30550040cbdaa86c52d5010000000000855c3400000000a8ed3232310000000000855c340000000080ab26a700000000000000000100000000010000000000ea305500000000a8ed323201000000</code></pre></div>\n<p>Then generate the template for the transaction containing the <code class=\"language-text\">eosio.wrap::exec</code> action:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos push action -s -j -d eosio.wrap exec &#39;{&quot;executer&quot;: &quot;blkproducera&quot;, &quot;trx&quot;: &quot;&quot;}&#39; &gt; wrap_update_alice_owner_trx.json\n$ cat wrap_update_alice_owner_trx.json\n{\n  &quot;expiration&quot;: &quot;2018-06-29T23:34:01&quot;,\n  &quot;ref_block_num&quot;: 23708,\n  &quot;ref_block_prefix&quot;: 3605208482,\n  &quot;max_net_usage_words&quot;: 0,\n  &quot;max_cpu_usage_ms&quot;: 0,\n  &quot;delay_sec&quot;: 0,\n  &quot;context_free_actions&quot;: [],\n  &quot;actions&quot;: [{\n      &quot;account&quot;: &quot;eosio.wrap&quot;,\n      &quot;name&quot;: &quot;exec&quot;,\n      &quot;authorization&quot;: [],\n      &quot;data&quot;: &quot;60ae423ad15b613c&quot;\n    }\n  ],\n  &quot;transaction_extensions&quot;: [],\n  &quot;signatures&quot;: [],\n  &quot;context_free_data&quot;: []\n}</code></pre></div>\n<p>Then modify the transaction in wrap_update_alice_owner_trx.json as follows:</p>\n<ul>\n<li>replace the values of the <code class=\"language-text\">ref_block_num</code> and <code class=\"language-text\">ref_block_prefix</code> fields to 0;</li>\n<li>replace the time of the <code class=\"language-text\">expiration</code> field to the desired expiration time as described above (e.g. <code class=\"language-text\">&quot;2018-07-06T12:00:00&quot;</code>);</li>\n<li>append the hex data from update_alice_owner_trx_serialized.hex to the end of the existing hex data in the <code class=\"language-text\">data</code> field in wrap_update_alice_owner_trx.json.</li>\n</ul>\n<h4 id=\"212-propose-the-transaction-to-change-the-owner-permission-of-an-account\"><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#212-propose-the-transaction-to-change-the-owner-permission-of-an-account\" aria-label=\"212 propose the transaction to change the owner permission of an account permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1.2 Propose the transaction to change the owner permission of an account</h4>\n<p>The lead block producer (<code class=\"language-text\">blkproducera</code>) should propose the transaction stored in wrap_update_alice_owner_trx.json:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos multisig propose_trx updatealice producer_permissions.json wrap_update_alice_owner_trx.json blkproducera\nexecuted transaction: 10474f52c9e3fc8e729469a577cd2fc9e4330e25b3fd402fc738ddde26605c13  624 bytes  782 us\n#    eosio.msig &lt;= eosio.msig::propose          {&quot;proposer&quot;:&quot;blkproducera&quot;,&quot;proposal_name&quot;:&quot;updatealice&quot;,&quot;requested&quot;:[{&quot;actor&quot;:&quot;blkproducera&quot;,&quot;permi...\nwarning: transaction executed locally, but may not be confirmed by the network yet</code></pre></div>\n<h4 id=\"213-review-and-approve-the-transaction-to-change-the-owner-permission-of-an-account\"><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#213-review-and-approve-the-transaction-to-change-the-owner-permission-of-an-account\" aria-label=\"213 review and approve the transaction to change the owner permission of an account permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1.3 Review and approve the transaction to change the owner permission of an account</h4>\n<p>Each of the potential approvers of the proposed transaction (i.e. the active block producers) should first review the proposed transaction to make sure they are not approving anything that they do not agree to.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos multisig review blkproducera updatealice &gt; wrap_update_alice_owner_trx_to_review.json\n$ cat wrap_update_alice_owner_trx_to_review.json\n{\n  &quot;proposal_name&quot;: &quot;updatealice&quot;,\n  &quot;packed_transaction&quot;: &quot;c0593f5b000000000000000000000100004d1a03ea305500000000008054570260ae423ad15b613c00000000a8ed323200004d1a03ea305500000000a8ed32326b60ae423ad15b613c0000000000000000000000000000010000000000ea30550040cbdaa86c52d5010000000000855c3400000000a8ed3232310000000000855c340000000080ab26a700000000000000000100000000010000000000ea305500000000a8ed32320100000000&quot;,\n  &quot;transaction&quot;: {\n    &quot;expiration&quot;: &quot;2018-07-06T12:00:00&quot;,\n    &quot;ref_block_num&quot;: 0,\n    &quot;ref_block_prefix&quot;: 0,\n    &quot;max_net_usage_words&quot;: 0,\n    &quot;max_cpu_usage_ms&quot;: 0,\n    &quot;delay_sec&quot;: 0,\n    &quot;context_free_actions&quot;: [],\n    &quot;actions&quot;: [{\n        &quot;account&quot;: &quot;eosio.wrap&quot;,\n        &quot;name&quot;: &quot;exec&quot;,\n        &quot;authorization&quot;: [{\n            &quot;actor&quot;: &quot;blkproducera&quot;,\n            &quot;permission&quot;: &quot;active&quot;\n          },{\n            &quot;actor&quot;: &quot;eosio.wrap&quot;,\n            &quot;permission&quot;: &quot;active&quot;\n          }\n        ],\n        &quot;data&quot;: {\n          &quot;executer&quot;: &quot;blkproducera&quot;,\n          &quot;trx&quot;: {\n            &quot;expiration&quot;: &quot;1970-01-01T00:00:00&quot;,\n            &quot;ref_block_num&quot;: 0,\n            &quot;ref_block_prefix&quot;: 0,\n            &quot;max_net_usage_words&quot;: 0,\n            &quot;max_cpu_usage_ms&quot;: 0,\n            &quot;delay_sec&quot;: 0,\n            &quot;context_free_actions&quot;: [],\n            &quot;actions&quot;: [{\n                &quot;account&quot;: &quot;eosio&quot;,\n                &quot;name&quot;: &quot;updateauth&quot;,\n                &quot;authorization&quot;: [{\n                    &quot;actor&quot;: &quot;alice&quot;,\n                    &quot;permission&quot;: &quot;active&quot;\n                  }\n                ],\n                &quot;data&quot;: &quot;0000000000855c340000000080ab26a700000000000000000100000000010000000000ea305500000000a8ed3232010000&quot;\n              }\n            ],\n            &quot;transaction_extensions&quot;: []\n          }\n        },\n        &quot;hex_data&quot;: &quot;60ae423ad15b613c0000000000000000000000000000010000000000ea30550040cbdaa86c52d5010000000000855c3400000000a8ed3232310000000000855c340000000080ab26a700000000000000000100000000010000000000ea305500000000a8ed323201000000&quot;\n      }\n    ],\n    &quot;transaction_extensions&quot;: []\n  }\n}</code></pre></div>\n<p>The approvers should go through the human-readable transaction output and make sure everything looks fine. However, due to a current limitation of nodeos/cleos, the JSONification of action payload data does not occur recursively. So while both the <code class=\"language-text\">hex_data</code> and the human-readable JSON <code class=\"language-text\">data</code> of the payload of the <code class=\"language-text\">eosio.wrap::exec</code> action is available in the output of the <code class=\"language-text\">cleos multisig review</code> command, only the hex data is available of the payload of the inner <code class=\"language-text\">eosio::updateauth</code> action. So it is not clear what the <code class=\"language-text\">updateauth</code> will actually do.</p>\n<p>Furthermore, even if this usability issue was fixed in nodeos/cleos, there will still be cases where there is no sensible human-readable version of an action data payload within a transaction. An example of this is the proposed transaction in sub-section 2.2.3 which used the <code class=\"language-text\">eosio::setcode</code> action to set the contract code of the <code class=\"language-text\">eosio.wrap</code> account. The best thing to do in such situations is for the reviewer to compare the proposed transaction to one generated by them through a process they trust.</p>\n<p>Since each block producer generated a transaction in sub-section 3.1.1 (stored in the file wrap_update_alice_owner_trx.json) which should be identical to the transaction proposed by the lead block producer, they can each simply check to see if the two transactions are identical:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos multisig propose_trx -j -s -d updatealice &#39;[]&#39; wrap_update_alice_owner_trx.json blkproducera | grep &#39;&quot;data&quot;:&#39; | sed &#39;s/^[ \\t]*&quot;data&quot;:[ \\t]*//;s/[&quot;,]//g&#39; | cut -c 35- &gt; expected_wrap_update_alice_owner_trx_serialized.hex\n$ cat expected_wrap_update_alice_owner_trx_serialized.hex\nc0593f5b000000000000000000000100004d1a03ea305500000000008054570260ae423ad15b613c00000000a8ed323200004d1a03ea305500000000a8ed32326b60ae423ad15b613c0000000000000000000000000000010000000000ea30550040cbdaa86c52d5010000000000855c3400000000a8ed3232310000000000855c340000000080ab26a700000000000000000100000000010000000000ea305500000000a8ed32320100000000\n$ cat wrap_update_alice_owner_trx_to_review.json | grep &#39;&quot;packed_transaction&quot;:&#39; | sed &#39;s/^[ \\t]*&quot;packed_transaction&quot;:[ \\t]*//;s/[&quot;,]//g&#39; &gt; proposed_wrap_update_alice_owner_trx_serialized.hex\n$ cat proposed_wrap_update_alice_owner_trx_serialized.hex\nc0593f5b000000000000000000000100004d1a03ea305500000000008054570260ae423ad15b613c00000000a8ed323200004d1a03ea305500000000a8ed32326b60ae423ad15b613c0000000000000000000000000000010000000000ea30550040cbdaa86c52d5010000000000855c3400000000a8ed3232310000000000855c340000000080ab26a700000000000000000100000000010000000000ea305500000000a8ed32320100000000\n$ diff expected_wrap_update_alice_owner_trx_serialized.hex  proposed_wrap_update_alice_owner_trx_serialized.hex</code></pre></div>\n<p>When an approver (e.g. <code class=\"language-text\">blkproducerb</code>) is satisfied with the proposed transaction, they can simply approve it:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos multisig approve blkproducera updatealice &#39;{&quot;actor&quot;: &quot;blkproducerb&quot;, &quot;permission&quot;: &quot;active&quot;}&#39; -p blkproducerb\nexecuted transaction: 2bddc7747e0660ba26babf95035225895b134bfb2ede32ba0a2bb6091c7dab56  128 bytes  543 us\n#    eosio.msig &lt;= eosio.msig::approve          {&quot;proposer&quot;:&quot;blkproducera&quot;,&quot;proposal_name&quot;:&quot;updatealice&quot;,&quot;level&quot;:{&quot;actor&quot;:&quot;blkproducerb&quot;,&quot;permission...\nwarning: transaction executed locally, but may not be confirmed by the network yet</code></pre></div>\n<h4 id=\"214-execute-the-transaction-to-change-the-owner-permission-of-an-account\"><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#214-execute-the-transaction-to-change-the-owner-permission-of-an-account\" aria-label=\"214 execute the transaction to change the owner permission of an account permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1.4 Execute the transaction to change the owner permission of an account</h4>\n<p>When the necessary approvals are collected (in this example, with 21 block producers, at least 15 of their approvals were required), anyone can push the <code class=\"language-text\">eosio.msig::exec</code> action which executes the approved transaction. It makes a lot of sense for the lead block producer who proposed the transaction to also execute it (this will incur another temporary RAM cost for the deferred transaction that is generated by the eosio.msig contract).</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos multisig exec blkproducera updatealice blkproducera\nexecuted transaction: 7127a66ae307fbef6415bf60c3e91a88b79bcb46030da983c683deb2a1a8e0d0  160 bytes  820 us\n#    eosio.msig &lt;= eosio.msig::exec             {&quot;proposer&quot;:&quot;blkproducera&quot;,&quot;proposal_name&quot;:&quot;updatealice&quot;,&quot;executer&quot;:&quot;blkproducera&quot;}\nwarning: transaction executed locally, but may not be confirmed by the network yet</code></pre></div>\n<p>Anyone can now verify that the owner authority of <code class=\"language-text\">alice</code> was successfully changed:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cleos get account alice\npermissions:\n     owner     1:    1 eosio@active,\n        active     1:    1 EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV\nmemory:\n     quota:     49.74 KiB    used:     3.348 KiB  \n\nnet bandwidth:\n     staked:          1.0000 SYS           (total stake delegated from account to self)\n     delegated:       0.0000 SYS           (total staked delegated to account from others)\n     used:                 0 bytes\n     available:        2.304 MiB  \n     limit:            2.304 MiB  \n\ncpu bandwidth:\n     staked:          1.0000 SYS           (total stake delegated from account to self)\n     delegated:       0.0000 SYS           (total staked delegated to account from others)\n     used:               413 us   \n     available:        460.4 ms   \n     limit:            460.8 ms   \n\nproducers:     &lt;not voted&gt;</code></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#eosiowrap\">eosio.wrap</a></p>\n<ul>\n<li>\n<p><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#1-installing-the-eosiowrap-contract\">1. Installing the eosio.wrap contract</a></p>\n<ul>\n<li>\n<p><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#11-create-the-eosiowrap-account\">1.1 Create the eosio.wrap account</a></p>\n<ul>\n<li><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#111-generate-the-transaction-to-create-the-eosiowrap-account\">1.1.1 Generate the transaction to create the eosio.wrap account</a></li>\n<li><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#112-propose-the-transaction-to-create-the-eosiowrap-account\">1.1.2 Propose the transaction to create the eosio.wrap account</a></li>\n<li><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#113-review-and-approve-the-transaction-to-create-the-eosiowrap-account\">1.1.3 Review and approve the transaction to create the eosio.wrap account</a></li>\n<li><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#114-execute-the-transaction-to-create-the-eosiowrap-account\">1.1.4 Execute the transaction to create the eosio.wrap account</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#12-deploy-the-eosiowrap-contract\">1.2 Deploy the eosio.wrap contract</a></p>\n<ul>\n<li><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#121--generate-the-transaction-to-deploy-the-eosiowrap-contract\">1.2.1  Generate the transaction to deploy the eosio.wrap contract</a></li>\n<li><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#122-propose-the-transaction-to-deploy-the-eosiowrap-contract\">1.2.2 Propose the transaction to deploy the eosio.wrap contract</a></li>\n<li><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#123-review-and-approve-the-transaction-to-deploy-the-eosiowrap-contract\">1.2.3 Review and approve the transaction to deploy the eosio.wrap contract</a></li>\n<li><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#124-execute-the-transaction-to-create-the-eosiowrap-account\">1.2.4 Execute the transaction to create the eosio.wrap account</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#2-using-the-eosiowrap-contract\">2. Using the eosio.wrap contract</a></p>\n<ul>\n<li>\n<p><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#21-example-updating-owner-authority-of-an-arbitrary-account\">2.1 Example: Updating owner authority of an arbitrary account</a></p>\n<ul>\n<li><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#211-generate-the-transaction-to-change-the-owner-permission-of-an-account\">2.1.1 Generate the transaction to change the owner permission of an account</a></li>\n<li><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#212-propose-the-transaction-to-change-the-owner-permission-of-an-account\">2.1.2 Propose the transaction to change the owner permission of an account</a></li>\n<li><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#213-review-and-approve-the-transaction-to-change-the-owner-permission-of-an-account\">2.1.3 Review and approve the transaction to change the owner permission of an account</a></li>\n<li><a href=\"/eosio.contracts/v1.9/guides/how-to-use-eosio.wrap/#214-execute-the-transaction-to-change-the-owner-permission-of-an-account\">2.1.4 Execute the transaction to change the owner permission of an account</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"content_title":"How to use eosio.wrap","hide_toc":null,"link_text":"How to use eosio.wrap","link_title":null,"page_description":null,"page_title":"How to use eosio.wrap","source_path":"docs/03_guides/07_how-to-use-eosio.wrap.md"},"fields":{"articleTitle":"guideshow-to-use-eosiowrap","contentTitle":"How To Use Eosio.wrap","headTagTitle":"guideshow-to-use-eosiowrap","internalSummary":"/usr/local/lib/python3.6/dist-packages/thorka-0.1-py3.6.egg/src/lib/gatsby/data/v1.9/SUMMARY.json","isCollection":false,"isRoot":true,"isTagged":true,"organization":"EOSIO","originalKey":"/","pathData":"{\"tagged\":true,\"parentPath\":\"v1.9/guides\",\"collectionPath\":\"/\",\"rootDirPath\":\"v1.9\",\"filename\":\"how-to-use-eosio.wrap.md\"}","repository":"eosio.contracts","showSearch":true,"slug":"/v1.9/guides/how-to-use-eosio.wrap","tagsList":"[{\"beta\":0,\"build\":0,\"deprecated\":false,\"latest\":false,\"rc\":0,\"tag\":\"v1.9.0-rc2\",\"tag_reduced\":\"1.9\",\"tag_reduced_friendly\":\"v1.9\",\"tag_sanitized\":\"1.9.0-rc2\",\"summaryPath\":\"/usr/local/lib/python3.6/dist-packages/thorka-0.1-py3.6.egg/src/lib/gatsby/data/v1.9/SUMMARY.json\",\"importedSummary\":\"N/A\",\"version\":\"v1.9\"},{\"beta\":0,\"build\":0,\"deprecated\":false,\"latest\":true,\"rc\":0,\"tag\":\"v1.8.0\",\"tag_reduced\":\"1.8\",\"tag_reduced_friendly\":\"v1.8\",\"tag_sanitized\":\"1.8.0\",\"summaryPath\":\"/usr/local/lib/python3.6/dist-packages/thorka-0.1-py3.6.egg/src/lib/gatsby/data/latest/SUMMARY.json\",\"importedSummary\":\"N/A\",\"version\":\"latest\"}]","latestDDVersion":"latest","importedSummary":"N/A","hasPrimaryNavigation":false,"primaryNavData":"[{\"text\":\"NONE\",\"path\":\"EMPTY\"}]","currentVersion":"v1.9","currentDDVersion":"1.9","summaryJson":"{\"array\":[{\"title\":\"Build And Deploy\",\"link\":\"build-and-deploy.md\"},{\"sub\":[{\"title\":\"Upgrading The Eosio.system Contract\",\"link\":\"guides/upgrading-the-eosio.system-contract.md\"},{\"title\":\"How To Buy Ram\",\"link\":\"guides/how-to-buy-ram.md\"},{\"title\":\"How To Stake\",\"link\":\"guides/how-to-stake.md\"},{\"title\":\"How To Vote\",\"link\":\"guides/how-to-vote.md\"},{\"title\":\"How To Create Issue And Transfer A Token\",\"link\":\"guides/how-to-create-issue-and-transfer-a-token.md\"},{\"title\":\"How To Sign A Multisig Transaction With Eosio.msig\",\"link\":\"guides/how-to-sign-a-multisig-transaction-with-eosio.msig.md\"},{\"title\":\"How To Use Eosio.wrap\",\"link\":\"guides/how-to-use-eosio.wrap.md\"}],\"title\":\"Guides\",\"link\":\"guides\"},{\"sub\":[{\"sub\":[],\"title\":\"Eosio.bios\",\"link\":\"action-reference/eosio.bios\"},{\"sub\":[],\"title\":\"Eosio.msig\",\"link\":\"action-reference/eosio.msig\"},{\"sub\":[{\"title\":\"Exchange state\",\"link\":\"action-reference/eosio.system/exchange_state.md\"},{\"title\":\"Native\",\"link\":\"action-reference/eosio.system/native.md\"},{\"title\":\"Rex.results\",\"link\":\"action-reference/eosio.system/rex.results.md\"}],\"title\":\"Eosio.system\",\"link\":\"action-reference/eosio.system\"},{\"sub\":[],\"title\":\"Eosio.token\",\"link\":\"action-reference/eosio.token\"},{\"sub\":[],\"title\":\"Eosio.wrap\",\"link\":\"action-reference/eosio.wrap\"}],\"title\":\"Action Reference\"}],\"title\":[]}"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/v1.9/guides/how-to-use-eosio.wrap"}}}